{"title":"关于PageHelper 分页插件的使用以及其中的坑","date":"2021-02-01T10:05:47.000Z","date_formatted":{"ll":"Feb 1, 2021","L":"02/01/2021","MM-DD":"02-01"},"link":"wwi0un","comments":true,"updated":"2021-02-03T04:20:57.253Z","content":"<p>categories:[Java,Spring]<br>\ntags:[mybatis,SpringBoot,MySql]</p>\n<hr>\n<h1 id=\"如何使用\">如何使用<a title=\"#如何使用\" href=\"#如何使用\"></a></h1>\n<p>直接导入依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--分页插件--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.13<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>常见的使用方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> PageInfo <span class=\"title\">findPage</span><span class=\"params\">(<span class=\"keyword\">int</span> pageNum,<span class=\"keyword\">int</span> pageSize)</span></span>&#123;</span><br><span class=\"line\">      PageHelper.startPage(pageNum,pageSize);</span><br><span class=\"line\">      List&lt;User&gt; list=userDao.selectAll();</span><br><span class=\"line\">      PageInfo pageInfo = <span class=\"keyword\">new</span> PageInfo(list);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> pageInfo;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>说明</p>\n<ol>\n<li><code>startPage()</code>  方法调用后必须紧跟 MyBatis 查询方法</li>\n<li><code>startPage()</code>  方法是静态方法, 只需要传入 <code>pageNum</code>  和 <code>pageSize</code>  两个参数</li>\n<li>我们不需要对查询 SQL 做修改就可以达到分页的效果</li>\n<li>PageInfo 里面包含了一整个页面的信息</li>\n<li>PageInfo 构造函数传入的参数必须是 <code>startPage()</code>  后的那个方法得到的对象（原因下文解释）</li>\n</ol>\n<h1 id=\"pageinfo-中的参数说明\">PageInfo 中的参数说明<a title=\"#pageinfo-中的参数说明\" href=\"#pageinfo-中的参数说明\"></a></h1>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PageInfo</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">PageSerializable</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 当前页的页码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> pageNum;</span><br><span class=\"line\">    <span class=\"comment\">// 页大小, 为分页时提供的参数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> pageSize;</span><br><span class=\"line\">    <span class=\"comment\">// 当前页的记录条数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">    <span class=\"comment\">// 由第几条开始(数据库行号)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> startRow;</span><br><span class=\"line\">    <span class=\"comment\">// 第几条结束(数据库行号)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> endRow;</span><br><span class=\"line\">    <span class=\"comment\">// 一共有多少页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> pages;</span><br><span class=\"line\">    <span class=\"comment\">// 前一页的页号, 如果没有前一页就是为0</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> prePage;</span><br><span class=\"line\">    <span class=\"comment\">// 后一页的页号, 如果没有前一页就是为0</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> nextPage;</span><br><span class=\"line\">    <span class=\"comment\">// 是否是第一页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isFirstPage;</span><br><span class=\"line\">    <span class=\"comment\">// 是否是最后一页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isLastPage;</span><br><span class=\"line\">    <span class=\"comment\">// 是否有前一页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> hasPreviousPage;</span><br><span class=\"line\">    <span class=\"comment\">// 是否有后一页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> hasNextPage;</span><br><span class=\"line\">    <span class=\"comment\">// 每页显示的页码个数, 在构造方法里面被默认设置为8</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> navigatePages;</span><br><span class=\"line\">    <span class=\"comment\">// 页码数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] navigatepageNums;</span><br><span class=\"line\">    <span class=\"comment\">// 首页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> navigateFirstPage;</span><br><span class=\"line\">    <span class=\"comment\">// 尾页</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> navigateLastPage;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 方法省略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>另外它还继承自 <code>PageSerializable``&lt;``T``&gt;</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PageSerializable</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 当前页的记录条数</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> total;</span><br><span class=\"line\">    <span class=\"comment\">// 当前页的每一条记录</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> List&lt;T&gt; list;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 方法省略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"pagehelper-使用中的坑\">PageHelper 使用中的坑<a title=\"#pagehelper-使用中的坑\" href=\"#pagehelper-使用中的坑\"></a></h1>\n<h2 id=\"需求描述\">需求描述<a title=\"#需求描述\" href=\"#需求描述\"></a></h2>\n<p>出于安全性的考虑, 我想要查询到的 POJO 映射到 VO 类中，VO 类相比 POJO 类缺少了某些私密属性， 将 VO 作为基本元素封装到 PageInfo 中, 于是我写出来如下代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">PageInfo&lt;PostItemVO&gt; <span class=\"title\">selectAll</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 开启分页 （PageNum,PageSize）</span></span><br><span class=\"line\">    PageHelper.startPage(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    List&lt;Post&gt; posts = postMapper.selectAll();</span><br><span class=\"line\">    <span class=\"comment\">// 属性拷贝</span></span><br><span class=\"line\">    List&lt;PostItemVO&gt; postItemVOS = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Post post : posts) &#123;</span><br><span class=\"line\">        PostItemVO postItemVO = <span class=\"keyword\">new</span> PostItemVO();</span><br><span class=\"line\">        BeanUtils.copyProperties(post,postItemVO);</span><br><span class=\"line\">        postItemVOS.add(postItemVO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// PageInfo 封装</span></span><br><span class=\"line\">    PageInfo&lt;PostItemVO&gt; pageInfo = <span class=\"keyword\">new</span> PageInfo&lt;PostItemVO&gt;(postItemVOS);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pageInfo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Post 是我的 POJO, PostVO 是对应的 VO 类。数据库中查询得到 Post 集合，将其属性拷贝到 PostVO 集合。<br>\n乍一看其实写的不存在问题，但是我们在查询时就会出现问题<br>\n数据库表如下, 共有四条记录<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612313561344-6bbadec9-4699-43bc-bd0f-7a584f53743a.png#align=left&amp;display=inline&amp;height=74&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=147&amp;originWidth=1514&amp;size=27557&amp;status=done&amp;style=none&amp;width=757\" alt=\"image.png\"><br>\n得到的 PageInfo 如下<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612313846398-b64eecb6-7e69-41db-b327-8a35fe735b38.png#align=left&amp;display=inline&amp;height=492&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=492&amp;originWidth=625&amp;size=129408&amp;status=done&amp;style=none&amp;width=625\" alt=\"image.png\"><br>\n数据库中共有 4 条记录, 但是查询得到的 total 只有 2 条, 除此之外 <code>nextPage</code> , <code>endRow....</code>  字段都出现了问题。</p>\n<h2 id=\"解决方法\">解决方法<a title=\"#解决方法\" href=\"#解决方法\"></a></h2>\n<h3 id=\"方法一\">方法一<a title=\"#方法一\" href=\"#方法一\"></a></h3>\n<p>先直接将查询结果封装到一个 PageInfo 中, 之后将将该 PageInfo 的 list 取出来做改造</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageInfo&lt; selectAll() &#123;</span><br><span class=\"line\">\t\tPageHelper.startPage(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tList&lt;Post&gt; posts = postMapper.selectAll();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 直接将Post封装</span></span><br><span class=\"line\">\t\tPageInfo pageInfo = <span class=\"keyword\">new</span> PageInfo&lt;&gt;(posts);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 取出List进行数据转移</span></span><br><span class=\"line\">\t\tArrayList&lt;PostItemVO&gt; postItemVOS = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tpageInfo.getList().forEach(post-&gt;&#123;</span><br><span class=\"line\">\t\t\tPostItemVO postItemVO = <span class=\"keyword\">new</span> PostItemVO();</span><br><span class=\"line\">\t\t\tBeanUtils.copyProperties(post,postItemVO);</span><br><span class=\"line\">\t\t\tpostItemVOS.add(postItemVO);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\tpageInfo.setList(postItemVOS);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pageInfo;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>查询结果如下<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612321919969-4c00512a-c405-4abe-b0eb-6bdd34f5e6c2.png#align=left&amp;display=inline&amp;height=459&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=459&amp;originWidth=608&amp;size=35259&amp;status=done&amp;style=none&amp;width=608\" alt=\"image.png\"></p>\n<h3 id=\"方法二-推荐\">方法二 推荐<a title=\"#方法二-推荐\" href=\"#方法二-推荐\"></a></h3>\n<p><strong>更加优雅的方式</strong>, 我们对查询语句进行改造, 使其直接返回一个 VO 集合，也就是说数据库表直接映射到 VO 上, 之后直接将该 List 封装在 PageInfo 之后, 直接返回就行了.<br>\n1 需要对 <code>PostMapper.xml</code>  进行修改</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--结果映射--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ItemMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;im.yzh.mymyblog.model.vo.PostItemVO&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;BIGINT&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;title&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;update_time&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;TIMESTAMP&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;updateTime&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;published&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;BIT&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;published&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;category_id&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;BIGINT&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;categoryId&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--一共有哪些字段--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;Item_Column_List&quot;</span>&gt;</span></span><br><span class=\"line\">  id, title, update_time, published, category_id</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--查询SQL--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAllItem&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;ItemMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;Item_Column_List&quot;</span>/&gt;</span></span><br><span class=\"line\">  from post order by update_time desc</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2 在 PostMapper 接口中添加相关方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">List&lt;PostItemVO&gt; <span class=\"title\">selectAllItem</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n<p>3 编写测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">PageInfo&lt;PostItemVO&gt; <span class=\"title\">selectAllItem</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    PageHelper.startPage(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    List&lt;PostItemVO&gt; posts = postMapper.selectAllItem();</span><br><span class=\"line\">    PageInfo&lt;PostItemVO&gt; pageInfo = <span class=\"keyword\">new</span> PageInfo&lt;PostItemVO&gt;(posts);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pageInfo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612322202997-33e37760-6119-4caf-954e-d63bfd7e993e.png#align=left&amp;display=inline&amp;height=483&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=483&amp;originWidth=598&amp;size=37543&amp;status=done&amp;style=none&amp;width=598\" alt=\"image.png\"><br>\n如果你有更好的解决方法欢迎留言评论</p>\n<h2 id=\"原因分析\">原因分析<a title=\"#原因分析\" href=\"#原因分析\"></a></h2>\n<p>total 字段为例, 为什么正确的查询结果是 4, 但是用之前的错误查询方法的结果是 2。<br>\n先分析之前的错误查询方法的代码。<br>\n打个断点，我们发现，在 <code>startPage()</code>  调用之后, 随后的一个查询被进行了分页, 查询结果被封装为了一个 Page 对象：<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612323795636-b67c1d76-d6b5-43ce-9d0c-9159becd782f.png#align=left&amp;display=inline&amp;height=268&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=432&amp;originWidth=1202&amp;size=87843&amp;status=done&amp;style=none&amp;width=746\" alt=\"image.png\"><br>\n查看 <code>com.github.pagehelper.``Page</code> 源代码, Page 对象中包含了之后被封装到 PageInfo 中的信息：<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612323907756-e7053454-b115-46fc-89be-ea0fe374dd1a.png#align=left&amp;display=inline&amp;height=337&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=495&amp;originWidth=1096&amp;size=73958&amp;status=done&amp;style=none&amp;width=746\" alt=\"image.png\"><br>\n也就是说, 我们的查询结果就已经包含了 PageInfo 之后需要的信息。查询得到的是一个 Page 实例，而不仅仅是一个 List， 所以说， 只对 <code>posts</code> 进行 POJO 的拷贝是不够的, 这会丢失我们的分页信息。</p>\n<p>对正确的查询过程进行调试分析：<br>\n1 被分页之后得到一个 Page 对象：<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612324668885-058571c8-603c-4a6d-a7ba-6b5375ff8f23.png#align=left&amp;display=inline&amp;height=597&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=735&amp;originWidth=918&amp;size=103685&amp;status=done&amp;style=none&amp;width=746\" alt=\"image.png\"><br>\n2 调用 PageInfo 构造函数会执行一个方法判断传入的参数是否为 Page 对象：<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/1552854/1612324841063-30583798-15ed-45f4-a3f5-f69a79a94603.png#align=left&amp;display=inline&amp;height=246&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=279&amp;originWidth=845&amp;size=28124&amp;status=done&amp;style=none&amp;width=746\" alt=\"image.png\"><br>\n假如是之前的那种错误方法, 我们传入的是 List 对象, 那么 <code>this.total</code>  就被初始化为了 List 的长度。 这就解释了为什么错误的方法得到的分页对象的 total 为 2</p>\n<h1 id=\"参考资料\">参考资料<a title=\"#参考资料\" href=\"#参考资料\"></a></h1>\n<p><a href=\"https://pagehelper.github.io/docs/howtouse/\" target=\"_blank\" rel=\"external nofollow noopener\">官方文档-如何使用分页插件</a><br>\n<a href=\"https://blog.csdn.net/weixin_45423451/article/details/103034921?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control\" target=\"_blank\" rel=\"external nofollow noopener\">CSDN-PageHelper，从 pageinfo 中取到的 total 不正确的处理。</a></p>\n","prev":{"title":"Python与算法竞赛以及常用模板","link":"nmmxgt"},"next":{"title":"mybatis-generator-maven插件与lombok的引入","link":"iq1x0p"},"plink":"https://mvbbb.github.io/wwi0un/","toc":[{"id":"如何使用","title":"如何使用","index":"1"},{"id":"pageinfo-中的参数说明","title":"PageInfo 中的参数说明","index":"2"},{"id":"pagehelper-使用中的坑","title":"PageHelper 使用中的坑","index":"3","children":[{"id":"需求描述","title":"需求描述","index":"3.1"},{"id":"解决方法","title":"解决方法","index":"3.2","children":[{"id":"方法一","title":"方法一","index":"3.2.1"},{"id":"方法二-推荐","title":"方法二 推荐","index":"3.2.2"}]},{"id":"原因分析","title":"原因分析","index":"3.3"}]},{"id":"参考资料","title":"参考资料","index":"4"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/wwi0un/\" title=\"关于PageHelper 分页插件的使用以及其中的坑\">https://mvbbb.github.io/wwi0un/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}