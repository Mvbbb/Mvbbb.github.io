{"title":"八皇后问题","date":"2020-10-08T08:53:06.000Z","date_formatted":{"ll":"Oct 8, 2020","L":"10/08/2020","MM-DD":"10-08"},"link":"ehshi7","comments":true,"tags":["算法"],"categories":["备战蓝桥杯","数据结构与算法"],"updated":"2021-02-03T04:20:59.573Z","content":"<p>题目链接 <a href=\"https://www.luogu.com.cn/problem/P1219\" target=\"_blank\" rel=\"external nofollow noopener\">P1219 [USACO1.5]八皇后 Checker Challenge</a><br>\n力扣题目链接 <a href=\"https://leetcode-cn.com/problems/n-queens/\" target=\"_blank\" rel=\"external nofollow noopener\">N Queens</a><br>\n这是一道经典的搜索题目</p>\n<h1 id=\"力扣中的-n-queens\">力扣中的 n queens<a title=\"#力扣中的-n-queens\" href=\"#力扣中的-n-queens\"></a></h1>\n<h2 id=\"暴力朴素解法\">暴力朴素解法<a title=\"#暴力朴素解法\" href=\"#暴力朴素解法\"></a></h2>\n<p>使用到了回溯</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">backtracking() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (终止条件) &#123;</span><br><span class=\"line\">        存放结果;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (枚举同一个位置的所有可能性，可以想成节点孩子的数量) &#123;</span><br><span class=\"line\">        递归，处理节点;</span><br><span class=\"line\">        backtracking();</span><br><span class=\"line\">        回溯，撤销处理结果</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">作者：carlsun<span class=\"number\">-2</span></span><br><span class=\"line\">链接：https:<span class=\"comment\">//leetcode-cn.com/problems/n-queens/solution/51-n-queenshui-su-fa-jing-dian-wen-ti-xiang-jie-by/</span></span><br><span class=\"line\">来源：力扣（LeetCode）</span><br><span class=\"line\">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;List&lt;String&gt;&gt; solveNQueens(<span class=\"keyword\">int</span> n) &#123;</span><br><span class=\"line\">        List&lt;List&lt;String&gt;&gt; res=<span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[][] board = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[n][n];</span><br><span class=\"line\">        init(board);</span><br><span class=\"line\">        helper(board,res,<span class=\"number\">0</span>); <span class=\"comment\">// 从第0行开始</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">helper</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] board, List&lt;List&lt;String&gt;&gt; res, <span class=\"keyword\">int</span> rowIndex)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rowIndex==board.length)&#123; <span class=\"comment\">// 越过最后一行了</span></span><br><span class=\"line\">            res.add(generate(board));</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历这一行的每一个位置</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> colIndex=<span class=\"number\">0</span>;colIndex&lt;board.length;colIndex++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isValid(board,rowIndex,colIndex))&#123;</span><br><span class=\"line\">                board[rowIndex][colIndex]=<span class=\"string\">&#x27;Q&#x27;</span>;</span><br><span class=\"line\">                helper(board, res, rowIndex+<span class=\"number\">1</span>);;</span><br><span class=\"line\">                board[rowIndex][colIndex]=<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> List&lt;String&gt; <span class=\"title\">generate</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] board)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; list=<span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span>[] row:board)&#123;</span><br><span class=\"line\">            StringBuffer sb=<span class=\"keyword\">new</span> StringBuffer();</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> c:row)</span><br><span class=\"line\">                sb.append(c);</span><br><span class=\"line\">            list.add(sb.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// true 可用, false 不可用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isValid</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] board, <span class=\"keyword\">int</span> rowIndex, <span class=\"keyword\">int</span> colIndex)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=rowIndex-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][colIndex]==<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 主对角线(只包含当前位置的上半部分)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=rowIndex-<span class=\"number\">1</span>,j=colIndex-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>&amp;&amp;j&gt;=<span class=\"number\">0</span>;i--,j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 副对角线(只包含当前位置的上半部分)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=rowIndex-<span class=\"number\">1</span>,j=colIndex+<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>&amp;&amp;j&lt;board.length;i--,j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] board)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;board.length;i++)&#123;</span><br><span class=\"line\">            Arrays.fill(board[i],<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用数组记录\">使用数组记录<a title=\"#使用数组记录\" href=\"#使用数组记录\"></a></h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1602224086139-3c1d85ba-5ae8-4a13-be7c-e3eee65c6dcd.png#align=left&amp;display=inline&amp;height=270&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=540&amp;originWidth=960&amp;size=85739&amp;status=done&amp;style=none&amp;width=480\" alt=\"image.png\" class=\"φcx\"></p>\n<blockquote>\n<p><a href=\"http://zxi.mytechroad.com/blog/searching/leetcode-51-n-queens/\" target=\"_blank\" rel=\"external nofollow noopener\">http://zxi.mytechroad.com/blog/searching/leetcode-51-n-queens/</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">string</span>&gt;&gt; solveNQueens(<span class=\"keyword\">int</span> n) &#123;</span><br><span class=\"line\">        board=<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">string</span>&gt;(n,<span class=\"built_in\">string</span>(n,<span class=\"string\">&#x27;.&#x27;</span>)); <span class=\"comment\">//初始化一个面板</span></span><br><span class=\"line\">        cols=<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;(n,<span class=\"number\">0</span>);</span><br><span class=\"line\">        diag1=<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;(<span class=\"number\">2</span>*n<span class=\"number\">-1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        diag2=<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;(<span class=\"number\">2</span>*n<span class=\"number\">-1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        nqueens(n,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">string</span>&gt; board; <span class=\"comment\">// 保存面板</span></span><br><span class=\"line\">    <span class=\"comment\">/*第i个位置是否可用, 每次加入皇后都会修改这里的状态*/</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; cols; <span class=\"comment\">// 该列是否被占用</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; diag1; <span class=\"comment\">// 该对角线是否被占用 (平行于主对角线)</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; diag2; <span class=\"comment\">// (偏向于副对角线)</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">string</span>&gt;&gt; res;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isOk</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> !cols[x]&amp;&amp;!diag1[x+y]&amp;&amp;!diag2[x-y+n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*在board的某个位置加入或者删除皇后都会改变3个状态数组的状态*/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">updateBoard</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> n,<span class=\"keyword\">bool</span> is_put)</span></span>&#123;</span><br><span class=\"line\">        cols[x]=is_put;</span><br><span class=\"line\">        diag1[x+y]=is_put;</span><br><span class=\"line\">        diag2[x-y+n<span class=\"number\">-1</span>]=is_put;</span><br><span class=\"line\">        board[x][y]=is_put?<span class=\"string\">&#x27;Q&#x27;</span>:<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">nqueens</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> n,<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span></span>&#123; <span class=\"comment\">//大小 行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y==n)&#123;</span><br><span class=\"line\">            res.push_back(board);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>;x&lt;n;x++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isOk(x,y,n))&#123;</span><br><span class=\"line\">                updateBoard(x,y,n,<span class=\"literal\">true</span>);</span><br><span class=\"line\">                nqueens(n,y+<span class=\"number\">1</span>);</span><br><span class=\"line\">                updateBoard(x,y,n,<span class=\"literal\">false</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>时间复杂度 <img src=\"https://cdn.nlark.com/yuque/__latex/1dfc0dc62ab0b72188128f273546f6b4.svg#card=math&amp;code=O%28n%21%29&amp;height=20&amp;width=41\" alt=\"\"><br>\n空间复杂度 <img src=\"https://cdn.nlark.com/yuque/__latex/7ba55e7c64a9405a0b39a1107e90ca94.svg#card=math&amp;code=O%28n%29%0A&amp;height=20&amp;width=36\" alt=\"\">  取决于皇后的数量, 递归调用的层数不会超过 <img src=\"https://cdn.nlark.com/yuque/__latex/8d9c307cb7f3c4a32822a51922d1ceaa.svg#card=math&amp;code=N&amp;height=16&amp;width=15\" alt=\"\"></p>\n<h2 id=\"使用位运算进行状态压缩\">使用位运算进行状态压缩<a title=\"#使用位运算进行状态压缩\" href=\"#使用位运算进行状态压缩\"></a></h2>\n<p>优点降低了空间复杂度</p>\n<blockquote>\n<p><a href=\"https://leetcode-cn.com/problems/n-queens/solution/nhuang-hou-by-leetcode-solution/\" target=\"_blank\" rel=\"external nofollow noopener\">https://leetcode-cn.com/problems/n-queens/solution/nhuang-hou-by-leetcode-solution/</a></p>\n</blockquote>\n<h1 id=\"洛谷中的-八皇后\">洛谷中的 八皇后<a title=\"#洛谷中的-八皇后\" href=\"#洛谷中的-八皇后\"></a></h1>\n<p>同力扣, 使用 ‘Q’ 代表该位置有皇后, ‘.’ 代表该位置没有皇后<br>\n洛谷中的下标是从 1 开始的</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">15</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,res;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cols[maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> diag1[maxn*<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> diag2[maxn*<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> board[maxn][maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isOk</span><span class=\"params\">(<span class=\"keyword\">int</span> row_index,<span class=\"keyword\">int</span> col_index)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !cols[col_index]&amp;&amp;!diag1[col_index+row_index]&amp;&amp;!diag2[row_index-col_index+n];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> row_index,<span class=\"keyword\">int</span> col_index,<span class=\"keyword\">bool</span> to)</span></span>&#123;</span><br><span class=\"line\">    cols[col_index]=to;</span><br><span class=\"line\">    diag1[col_index+row_index]=to;</span><br><span class=\"line\">    diag2[row_index-col_index+n]=to;</span><br><span class=\"line\">    board[row_index][col_index]=to?<span class=\"string\">&#x27;Q&#x27;</span>:<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_board</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;j&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> row_index)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(row_index==n+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        res++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(res&lt;=<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            print_board();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> col_index=<span class=\"number\">1</span>;col_index&lt;=n;col_index++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isOk(row_index,col_index))&#123;</span><br><span class=\"line\">            update(row_index,col_index,<span class=\"literal\">true</span>);</span><br><span class=\"line\">            solve(row_index+<span class=\"number\">1</span>);</span><br><span class=\"line\">            update(row_index,col_index,<span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(board,<span class=\"string\">&#x27;.&#x27;</span>,<span class=\"keyword\">sizeof</span>(board));</span><br><span class=\"line\">    solve(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;res&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><div><h1 id=\"推荐文章\">推荐文章<a title=\"#推荐文章\" href=\"%e6%8e%a8%e8%8d%90%e6%96%87%e7%ab%a0\"></a></h1><ul><li><a href=\"https://mvbbb.github.io/lvkhi9/\">洛谷【搜索】暴力专项训练</a></li><li><a href=\"https://mvbbb.github.io/nftmte/\">位运算</a></li><li><a href=\"https://mvbbb.github.io/wu5oin/\">kuangbin 题单</a></li><li><a href=\"https://mvbbb.github.io/wdmukq/\">挑战程序设计竞赛-习题</a></li><li><a href=\"https://lailin.xyz/post/defer.html\">Go数据结构与算法05-栈下: 深入理解 defer</a></li></ul></div>","prev":{"title":"洛谷【搜索】暴力专项训练","link":"lvkhi9"},"next":{"title":"博客文章发布BUG记录","link":"lgv9s5"},"plink":"https://mvbbb.github.io/ehshi7/","toc":[{"id":"力扣中的-n-queens","title":"力扣中的 n queens","index":"1","children":[{"id":"暴力朴素解法","title":"暴力朴素解法","index":"1.1"},{"id":"使用数组记录","title":"使用数组记录","index":"1.2"},{"id":"使用位运算进行状态压缩","title":"使用位运算进行状态压缩","index":"1.3"}]},{"id":"洛谷中的-八皇后","title":"洛谷中的 八皇后","index":"2"},{"id":"推荐文章","title":"推荐文章","index":"3"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/ehshi7/\" title=\"八皇后问题\">https://mvbbb.github.io/ehshi7/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}