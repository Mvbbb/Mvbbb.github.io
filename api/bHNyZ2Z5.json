{"title":"算法竞赛入门经典","date":"2020-10-01T13:09:45.000Z","date_formatted":{"ll":"Oct 1, 2020","L":"10/01/2020","MM-DD":"10-01"},"link":"lsrgfy","comments":true,"categories":["备战蓝桥杯","数据结构与算法"],"updated":"2021-02-03T04:20:59.921Z","content":"<p>冲冲冲!!</p>\n<a id=\"more\"></a>\n<h1 id=\"破损的键盘\">破损的键盘<a title=\"#破损的键盘\" href=\"#破损的键盘\"></a></h1>\n<blockquote>\n<p>UVA 11988</p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">10e5</span> +<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> last,cur,next[maxn];</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[maxn];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 每次处理一行文本</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,s+<span class=\"number\">1</span>)==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n=<span class=\"built_in\">strlen</span>(s+<span class=\"number\">1</span>); <span class=\"comment\">//字符串长度</span></span><br><span class=\"line\">        cur=last=<span class=\"number\">0</span>; <span class=\"comment\">// 空链表, 只有头结点</span></span><br><span class=\"line\">        next[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历每一个字符</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> ch=s[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ch==<span class=\"string\">&#x27;[&#x27;</span>) <span class=\"comment\">// home</span></span><br><span class=\"line\">                cur=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"string\">&#x27;]&#x27;</span>) <span class=\"comment\">// end</span></span><br><span class=\"line\">                cur=last;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                next[i]=next[cur];</span><br><span class=\"line\">                next[cur]=i;  <span class=\"comment\">// 把当前节点 (位置为i) 接到链表中</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(cur==last) <span class=\"comment\">// 更新最后一个字符的编号</span></span><br><span class=\"line\">                    last=i;</span><br><span class=\"line\">                cur=i; <span class=\"comment\">// 移动光标</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=next[<span class=\"number\">0</span>];i!=<span class=\"number\">0</span>;i=next[i])&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,s[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this_is_a_[beiju]_text</span></span><br><span class=\"line\"><span class=\"comment\">// 使用 cur 记录当前节点的位置, 方便下个节点的连接</span></span><br><span class=\"line\"><span class=\"comment\">// 使用 last 记录最后一个节点的位置</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"移动盒子\">移动盒子<a title=\"#移动盒子\" href=\"#移动盒子\"></a></h1>\n<blockquote>\n<p>UVA 12657</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;    // std::swap</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">10e5</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> left[maxn],right[maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 连接两个节点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(<span class=\"keyword\">int</span> l ,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    right[l]=r;</span><br><span class=\"line\">    left[r]=l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m,kase=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;m)==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//初始化一个双向链表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            left[i]=i<span class=\"number\">-1</span>;</span><br><span class=\"line\">            right[i]=(i+<span class=\"number\">1</span>)%(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        right[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;left[<span class=\"number\">0</span>]=n;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> op,X,Y,inv=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 读取并执行语句</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;op);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(op==<span class=\"number\">4</span>) <span class=\"comment\">// 如果之前不需要执行过翻转, 则需要执行翻转. 反之则需要执行</span></span><br><span class=\"line\">                inv=!inv;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;X,&amp;Y);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op==<span class=\"number\">3</span> &amp;&amp; right[Y] == X )&#123; <span class=\"comment\">// 需要交换x,y的位置, 并且y的右边就是x</span></span><br><span class=\"line\">                    swap(X,Y);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// 没有真正的翻转链表产生的副作用, 我们只是记录了是否需要翻转链表.</span></span><br><span class=\"line\">                <span class=\"comment\">// 因此, 假如需要翻转链表, 那么需要放在左边就变成了需要放在右边, 反之同理</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op!=<span class=\"number\">3</span> &amp;&amp; inv)&#123;</span><br><span class=\"line\">                    op=<span class=\"number\">3</span>-op;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op==<span class=\"number\">1</span> &amp;&amp; X==left[Y]) <span class=\"keyword\">continue</span>; <span class=\"comment\">//需要将x插入到y的左边, 但是x已经在y的左边</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op==<span class=\"number\">2</span> &amp;&amp; X==right[Y]) <span class=\"keyword\">continue</span>; <span class=\"comment\">//需要将x插入到y的右边, 但是x已经在y的右边</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 两个节点的左右位置信息</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> LX=left[X], RX=right[X],LY=left[Y], RY=right[Y];</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op==<span class=\"number\">1</span>)&#123; <span class=\"comment\">// x 到 y 左边</span></span><br><span class=\"line\">                    link(LX, RX);</span><br><span class=\"line\">                    link(LY,X);</span><br><span class=\"line\">                    link(X,Y);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op==<span class=\"number\">2</span>)&#123; <span class=\"comment\">// x 到 y 右边</span></span><br><span class=\"line\">                    link(LX, RX);</span><br><span class=\"line\">                    link(Y,X);</span><br><span class=\"line\">                    link(X,RY);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(op==<span class=\"number\">3</span>)&#123; <span class=\"comment\">// x,y 互换</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(right[X]==Y)&#123;</span><br><span class=\"line\">                        link(LX, Y);</span><br><span class=\"line\">                        link(Y,X);</span><br><span class=\"line\">                        link(X,RY);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        link(LX, Y);</span><br><span class=\"line\">                        link(Y, RX);</span><br><span class=\"line\">                        link(LY, X);</span><br><span class=\"line\">                        link(X, RY);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=<span class=\"number\">0</span>;</span><br><span class=\"line\">        ll ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 从左边向右边遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            b=right[b];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">1</span>)</span><br><span class=\"line\">                ans+=b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果需要翻转, 并且链表长度为偶数的话. ps奇数长度的话, 和是不会变的</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(inv &amp;&amp; n%<span class=\"number\">2</span>==<span class=\"number\">0</span>) ans=(ll)n*(n+<span class=\"number\">1</span>)/<span class=\"number\">2</span>-ans;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Case %d: %lld\\n&quot;</span>,++kase,ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>复习时看 <a href=\"https://blog.csdn.net/richenyunqi/article/details/86563744?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.channel_param\" target=\"_blank\" rel=\"external nofollow noopener\">https://blog.csdn.net/richenyunqi/article/details/86563744?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.channel_param</a></p>\n</blockquote>\n<h1 id=\"*小球下落\">*小球下落<a title=\"#*小球下落\" href=\"#*小球下落\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/UVA679\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/UVA679</a></p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxd=<span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> s[<span class=\"number\">1</span>&lt;&lt;maxd]; <span class=\"comment\">// 2^(maxd)-1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> D,I;<span class=\"comment\">// 深度, 个数</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;D,&amp;I)==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(s, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(s));</span><br><span class=\"line\">        <span class=\"keyword\">int</span> k,n=(<span class=\"number\">1</span>&lt;&lt;D)<span class=\"number\">-1</span>; <span class=\"comment\">// 最大节点编号为 2^(D-1)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;I;i++)&#123;</span><br><span class=\"line\">            k=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                s[k]=!s[k]; <span class=\"comment\">// 改变开关状态</span></span><br><span class=\"line\">                k=s[k]?k*<span class=\"number\">2</span>:k*<span class=\"number\">2</span>+<span class=\"number\">1</span>; <span class=\"comment\">// 走左边还是右边</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(k&gt;n) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,k/<span class=\"number\">2</span>); <span class=\"comment\">// 最后出界的节点编号</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于一个节点, 使用变量 x 记录滚该位置的小球个数, 小球第 奇数 次滚过该位置时则朝左儿子滚, 小球第 偶数 次滚过时, 则朝右儿子滚.<br>\n使用变量 ans 记录当前位置.</p>\n<ul>\n<li>朝左儿子滚的话 ans=2*ans</li>\n<li>朝右儿子滚的话 ans=2*ans+1</li>\n</ul>\n<p>当前小球 i 是第几个经过该节点的: (i+1)/2</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> d,i;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;d,&amp;i)==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>,k=<span class=\"number\">1</span>; <span class=\"comment\">// j 是当前小球所在节点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>;k&lt;d;k++)&#123;  <span class=\"comment\">//滚动次数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>) <span class=\"comment\">//如果是偶数点(true)</span></span><br><span class=\"line\">                j=j*<span class=\"number\">2</span>+<span class=\"number\">1</span>; <span class=\"comment\">//j标记向右</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"comment\">//如果是奇数点(false)</span></span><br><span class=\"line\">                j*=<span class=\"number\">2</span>;  <span class=\"comment\">//j标记向左</span></span><br><span class=\"line\">            i=(i+<span class=\"number\">1</span>)/<span class=\"number\">2</span>; <span class=\"comment\">//实际下落</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,j);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"树与二叉树\">树与二叉树<a title=\"#树与二叉树\" href=\"#树与二叉树\"></a></h1>\n<p>指针实现</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> hava_value;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v;</span><br><span class=\"line\">    Node * left,*right;</span><br><span class=\"line\">    Node():left(<span class=\"literal\">NULL</span>),right(<span class=\"literal\">NULL</span>),hava_value(<span class=\"literal\">false</span>)&#123;&#125;;</span><br><span class=\"line\">&#125;Node;</span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">newNode</span><span class=\"params\">()</span></span>&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Node();&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">10e5</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[maxn];</span><br><span class=\"line\">Node* root;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> failed;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addNode</span><span class=\"params\">(<span class=\"keyword\">int</span> v,<span class=\"keyword\">char</span> s[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n=<span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">    Node* u=root;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i!=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> ch=s[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ch==<span class=\"string\">&#x27;L&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(u-&gt;left=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                u-&gt;right=newNode();</span><br><span class=\"line\">            u=u-&gt;left;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"string\">&#x27;R&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(u-&gt;left=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                u-&gt;right=newNode();</span><br><span class=\"line\">            u=u-&gt;right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(u-&gt;hava_value) failed=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        u-&gt;v=v;</span><br><span class=\"line\">        u-&gt;hava_value=<span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_tree</span><span class=\"params\">(Node* u)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(u==<span class=\"literal\">NULL</span> )<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!u-&gt;left)</span><br><span class=\"line\">        remove_tree(u-&gt;left);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!u-&gt;right)</span><br><span class=\"line\">        remove_tree(u-&gt;right);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> u;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">read_input</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    failed=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    root=newNode();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,s)!=<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(s,<span class=\"string\">&quot;()&quot;</span>)) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v;</span><br><span class=\"line\">        <span class=\"built_in\">sscanf</span>(&amp;s[<span class=\"number\">1</span>], <span class=\"string\">&quot;%d&quot;</span>,&amp;v);</span><br><span class=\"line\">        addNode(v,<span class=\"built_in\">strchr</span>(s,<span class=\"string\">&#x27;,&#x27;</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">bfs</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&amp; ans)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;Node*&gt; q;</span><br><span class=\"line\">    ans.clear();</span><br><span class=\"line\">    q.push(root);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">        Node* u=q.front();q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!u-&gt;hava_value) failed=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        ans.push_back(u-&gt;v);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!u-&gt;left) q.push(u-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!u-&gt;right) q.push(u-&gt;right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>数组实现</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> root=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">10e5</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> left[maxn],right[maxn],have_value[maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">newTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    left[root]=right[root]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    have_value[root]=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">newNode</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> u=++cnt;</span><br><span class=\"line\">    left[u]=right[u]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    have_value[root]=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"树\">树<a title=\"#树\" href=\"#树\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/UVA548\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/UVA548</a></p>\n</blockquote>\n<p>做的想吐, 慢慢来慢慢来</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接使用权值作为节点编号</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxv=<span class=\"number\">10e4</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> in_order[maxv],post_order[maxv],lch[maxv],rch[maxv];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">read_list</span><span class=\"params\">(<span class=\"keyword\">int</span>* a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> line;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!getline(<span class=\"built_in\">cin</span>,line))<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">stringstream</span> <span class=\"title\">ss</span><span class=\"params\">(line)</span></span>;</span><br><span class=\"line\">    n=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">    <span class=\"comment\">// 向数组里面吐数据. n 是吐出来数字个数</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(ss&gt;&gt;x)&#123;</span><br><span class=\"line\">        a[n++]=x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n&gt;<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"keyword\">int</span> L1,<span class=\"keyword\">int</span> R1,<span class=\"keyword\">int</span> L2,<span class=\"keyword\">int</span> R2)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L1&gt;R1)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 根节点是后序遍历的最后一个节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> root=post_order[R2];</span><br><span class=\"line\">    <span class=\"comment\">// 找到根节点在中序遍历中的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> p=L1;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(in_order[p]!=root)p++;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt=p-L1; <span class=\"comment\">// 左子树节点数量</span></span><br><span class=\"line\">    <span class=\"comment\">// 注意这种划分方式, 要考</span></span><br><span class=\"line\">    lch[root]=build(L1,p<span class=\"number\">-1</span>,L2,L2+cnt<span class=\"number\">-1</span>);</span><br><span class=\"line\">    rch[root]=build(p+<span class=\"number\">1</span>,R1,L2+cnt,R2<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> best,best_sum;<span class=\"comment\">// 到目前的最优解和对应的权值的和</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> sum)</span></span>&#123;</span><br><span class=\"line\">    sum+=u;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!lch[u]&amp;&amp;!rch[u])&#123;<span class=\"comment\">// 叶子</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sum&lt;best_sum||(sum==best_sum&amp;&amp;u&lt;best))&#123;</span><br><span class=\"line\">            best=u;</span><br><span class=\"line\">            best_sum=sum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lch[u]) dfs(lch[u],sum);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rch[u]) dfs(rch[u],sum);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(read_list(in_order)&amp;&amp;read_list(post_order))&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        build(<span class=\"number\">0</span>, n<span class=\"number\">-1</span>, <span class=\"number\">0</span>, n<span class=\"number\">-1</span>);</span><br><span class=\"line\">        best_sum=<span class=\"number\">1000000000</span>;</span><br><span class=\"line\">        dfs(post_order[n<span class=\"number\">-1</span>],<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;best&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"*天平\">*天平<a title=\"#*天平\" href=\"#*天平\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/UVA839\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/UVA839</a></p>\n</blockquote>\n<p>令人绝望的递归</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span>&amp; w)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> w1,d1,w2,d2;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> b1=<span class=\"literal\">true</span>, b2=<span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;w1&gt;&gt;d1&gt;&gt;w2&gt;&gt;d2;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w1==<span class=\"number\">0</span>) b1=solve(w1); <span class=\"comment\">// 左子树</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w2==<span class=\"number\">0</span>) b2=solve(w2); <span class=\"comment\">// 右子树</span></span><br><span class=\"line\">    w=w1+w2; <span class=\"comment\">// 回溯, 记录总重量</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> b1&amp;&amp;b2&amp;&amp;(w1*d1==w2*d2); <span class=\"comment\">// 左右以及它本身</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,w;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(solve(w))</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"下落的树叶\">下落的树叶<a title=\"#下落的树叶\" href=\"#下落的树叶\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/UVA699\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/UVA699</a></p>\n</blockquote>\n<p>汇总到最左边和最右边的边节点上, 输出边界点<br>\n不会</p>\n","prev":{"title":"想学算法","link":"mce5h4"},"next":{"title":"JDBC与mysql数据库交互","link":"hy5u9w"},"plink":"https://mvbbb.github.io/lsrgfy/","toc":[{"id":"破损的键盘","title":"破损的键盘","index":"1"},{"id":"移动盒子","title":"移动盒子","index":"2"},{"id":"*小球下落","title":"*小球下落","index":"3"},{"id":"树与二叉树","title":"树与二叉树","index":"4"},{"id":"树","title":"树","index":"5"},{"id":"*天平","title":"*天平","index":"6"},{"id":"下落的树叶","title":"下落的树叶","index":"7"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/lsrgfy/\" title=\"算法竞赛入门经典\">https://mvbbb.github.io/lsrgfy/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}