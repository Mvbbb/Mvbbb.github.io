{"title":"D(la)P(ji)","date":"2020-09-10T07:39:28.000Z","date_formatted":{"ll":"Sep 10, 2020","L":"09/10/2020","MM-DD":"09-10"},"link":"vf5dyb","comments":true,"tags":["动态规划"],"categories":["动态规划","数据结构与算法"],"updated":"2021-02-03T04:21:00.281Z","content":"<p><a href=\"https://leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns\" target=\"_blank\" rel=\"external nofollow noopener\">https://leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns</a><br>\n被 dp 整的不要不要的, 要命, 要命<br>\n看不懂就背下来</p>\n<a id=\"more\"></a>\n<h1 id=\"dp-模板分类\">dp 模板分类<a title=\"#dp-模板分类\" href=\"#dp-模板分类\"></a></h1>\n<ol>\n<li>Minimum (Maximum) Path to Reach a Target 到达目标的最小(最大)路径</li>\n<li>Distinct Ways 不同路径</li>\n<li>Merging Intervals 合并区间</li>\n<li>DP on Strings 字符串上的 dp</li>\n<li>Decision Making 决策问题</li>\n</ol>\n<h1 id=\"最大(小)路径\">最大(小)路径<a title=\"#最大(小)路径\" href=\"#最大(小)路径\"></a></h1>\n<p>模板类似于</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= target; ++i) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; ways.size(); ++j) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (ways[j] &lt;= i) &#123;</span><br><span class=\"line\">           dp[i] = min(dp[i], dp[i - ways[j]] + cost / path / sum) ;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> dp[target]</span><br></pre></td></tr></table></figure>\n<p>类似的问题: 爬楼梯, 最小路径, 零钱兑换, 下降路径最小和…</p>\n<h2 id=\"931-下降路径最小和\">931 下降路径最小和<a title=\"#931-下降路径最小和\" href=\"#931-下降路径最小和\"></a></h2>\n<p>有点像那个三角形最小路径和的问题, 不过现在变成了正方形<br>\n从下面开始向上遍历</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minFallingPathSum</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] A)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n=A.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n-<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j!=n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> min=A[i+<span class=\"number\">1</span>][j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    min=Math.min(min,A[i+<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&lt;n-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    min=Math.min(min,A[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                A[i][j]+=min;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> res=Integer.MAX_VALUE;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i!=n;i++)&#123;</span><br><span class=\"line\">            res=Math.min(A[<span class=\"number\">0</span>][i],res);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"983-最低票价\">983 最低票价<a title=\"#983-最低票价\" href=\"#983-最低票价\"></a></h2>\n<h3 id=\"记忆化递归\">记忆化递归<a title=\"#记忆化递归\" href=\"#记忆化递归\"></a></h3>\n<p>dp[i]</p>\n<ul>\n<li>在没有任何通行证生效时, 能够从第 i 天到最后的旅行计划的最小花费, 如果你需要在第 i 天出行, 你的最小花费是<img src=\"https://cdn.nlark.com/yuque/__latex/edd32ab4ea1723c9214eca01b8320225.svg#card=math&amp;code=dp%5Bi%5D%3Dmin%28dp%5Bi%2B1%5D%2Bcosts%5B0%5D%2Cdp%5Bi%2B7%5D%2Bcosts%5B1%5D%2Cdp%5Bi%2B30%5D%2Bcosts%5B2%5D%29&amp;height=20&amp;width=533\" alt=\"\"><br>\n<code>dp[i+30]+costs[2]</code>  表示购买为期 30 天的火车票的花费+第 (i+30) 旅行到最后的花费</li>\n<li>假如第 i 天通行证有效, 那么 <img src=\"https://cdn.nlark.com/yuque/__latex/9b1023d11923cb6a2f845d5cbb079f09.svg#card=math&amp;code=dp%5Bi%5D%3Ddp%5Bi%2B1%5D&amp;height=20&amp;width=116\" alt=\"\"></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] costs;</span><br><span class=\"line\">    Integer[] memo;</span><br><span class=\"line\">    Set&lt;Integer&gt; dayset;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">mincostTickets</span><span class=\"params\">(<span class=\"keyword\">int</span>[] days, <span class=\"keyword\">int</span>[] costs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.costs = costs;</span><br><span class=\"line\">        memo = <span class=\"keyword\">new</span> Integer[<span class=\"number\">366</span>];</span><br><span class=\"line\">        dayset = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> d: days) &#123;</span><br><span class=\"line\">            dayset.add(d);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">dp</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">365</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (memo[i] != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> memo[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dayset.contains(i)) &#123;</span><br><span class=\"line\">            memo[i] = Math.min(Math.min(dp(i + <span class=\"number\">1</span>) + costs[<span class=\"number\">0</span>], dp(i + <span class=\"number\">7</span>) + costs[<span class=\"number\">1</span>]), dp(i + <span class=\"number\">30</span>) + costs[<span class=\"number\">2</span>]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            memo[i] = dp(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> memo[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"动态规划\">动态规划<a title=\"#动态规划\" href=\"#动态规划\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">mincostTickets</span><span class=\"params\">(<span class=\"keyword\">int</span>[] days, <span class=\"keyword\">int</span>[] costs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(days == <span class=\"keyword\">null</span> || days.length == <span class=\"number\">0</span> ||</span><br><span class=\"line\">                costs == <span class=\"keyword\">null</span> || costs.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maxDay=days[days.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"comment\">//dp表示到了当天花的最低票价</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[days[days.length - <span class=\"number\">1</span>]+<span class=\"number\">1</span>]; <span class=\"comment\">//dp数组涵盖最长的天数</span></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;<span class=\"comment\">//</span></span><br><span class=\"line\">        <span class=\"comment\">//标记一下需要买票的日子</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> day: days) &#123;</span><br><span class=\"line\">            dp[day] = Integer.MAX_VALUE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; dp.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//不需要买票</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dp[i] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//不需要买票花费的钱就是前一天的花费</span></span><br><span class=\"line\">                dp[i] = dp[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n1 = dp[i - <span class=\"number\">1</span>] + costs[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"comment\">/**如果今天距离第一天已经超过7天了</span></span><br><span class=\"line\"><span class=\"comment\">                 * 则花费: dp[i-7](7天前已经花费的钱)+cost[1](7天前买了一张7天的票)</span></span><br><span class=\"line\"><span class=\"comment\">                 * 否则就是直接第一天买了一张7天票</span></span><br><span class=\"line\"><span class=\"comment\">                 */</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> n2 = i &gt; <span class=\"number\">7</span> ? dp[i - <span class=\"number\">7</span>] + costs[<span class=\"number\">1</span>] : costs[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"comment\">//30天与7天 同理</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> n3 = i &gt; <span class=\"number\">30</span> ? dp[i - <span class=\"number\">30</span>] + costs[<span class=\"number\">2</span>] : costs[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">                dp[i] = Math.min(n1, Math.min(n2, n3));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//最后一天花费多少钱</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[maxDay];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"650-只有两个键的键盘\">650 只有两个键的键盘<a title=\"#650-只有两个键的键盘\" href=\"#650-只有两个键的键盘\"></a></h2>\n<p>素数分解<br>\n对于一个非素数 i, 他总是可以分解成两个数相乘 x*j , 把这 j 个数目字符 copy 1 次, paste x-1 次</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minSteps</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> []dp=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> min=Integer.MAX_VALUE;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;i;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i%j==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    min=Math.min(dp[j]+i/j,min);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            dp[i]=min;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"*279-完全平方数\">*279 完全平方数<a title=\"#*279-完全平方数\" href=\"#*279-完全平方数\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numSquares</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>]; <span class=\"comment\">// 默认初始化值都为0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">            dp[i] = i; <span class=\"comment\">// 最坏的情况就是每次+1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; i - j * j &gt;= <span class=\"number\">0</span>; j++) &#123;</span><br><span class=\"line\">                dp[i] = Math.min(dp[i], dp[i - j * j] + <span class=\"number\">1</span>); <span class=\"comment\">// 动态转移方程</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"不同路径\">不同路径<a title=\"#不同路径\" href=\"#不同路径\"></a></h1>\n<blockquote>\n<p>给定一个目标，找到达到给目标的方法数</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= target; ++i) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; ways.size(); ++j) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (ways[j] &lt;= i) &#123;</span><br><span class=\"line\">           dp[i] += dp[i - ways[j]];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> dp[target]</span><br></pre></td></tr></table></figure>\n<h2 id=\"*1155-掷骰子的-n-种方法\">*1155 掷骰子的 N 种方法<a title=\"#*1155-掷骰子的-n-种方法\" href=\"#*1155-掷骰子的-n-种方法\"></a></h2>\n<p>从前向后的递推<br>\ndp[i][j]=x;<br>\n扔 i 个骰子, 数字总和为 j 的方法数为 x<br>\n在骰子数为 i 的情况下, 得到 target=j 的方法数为 骰子数为 i-1 的情况下, 得到 target=j-(1…f) 的求和总数<br>\n<img src=\"https://cdn.nlark.com/yuque/__latex/8816a4d4e8db21f6c539129924aeade4.svg#card=math&amp;code=dp%5Bi%5D%5Bj%5D%3D%5Csum_%7Bx%3D1%7D%5Ekdp%5Bi-1%5D%5Bj-x%5D&amp;height=53&amp;width=205\" alt=\"\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MOD = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numRollsToTarget</span><span class=\"params\">(<span class=\"keyword\">int</span> d, <span class=\"keyword\">int</span> f, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] dp =<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">31</span>][<span class=\"number\">1001</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min=Math.min(f,target);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=min;i++)&#123;</span><br><span class=\"line\">            dp[<span class=\"number\">1</span>][i]=<span class=\"number\">1</span>;<span class=\"comment\">// 扔了一个骰子,</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> targetMax=d*f;<span class=\"comment\">// 每次扔到值为1的骰子,达到 target 的次数为 d*f</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=d;i++)&#123; <span class=\"comment\">// 骰子数目递增</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&lt;=targetMax;j++)&#123; <span class=\"comment\">// 在骰子数固定的情况下, 达到</span></span><br><span class=\"line\">               <span class=\"comment\">// 新投的一个骰子面值为 k</span></span><br><span class=\"line\">               <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; j - k &gt;= <span class=\"number\">0</span> &amp;&amp; k &lt;= f; k++) &#123;</span><br><span class=\"line\">                    dp[i][j] = (dp[i][j] + dp[i - <span class=\"number\">1</span>][j - k]) % MOD;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[d][target];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"合并区间\">合并区间<a title=\"#合并区间\" href=\"#合并区间\"></a></h1>\n<h1 id=\"字符串上的-dp\">字符串上的 dp<a title=\"#字符串上的-dp\" href=\"#字符串上的-dp\"></a></h1>\n<h1 id=\"决策问题\">决策问题<a title=\"#决策问题\" href=\"#决策问题\"></a></h1>\n<div><h1 id=\"推荐文章\">推荐文章<a title=\"#推荐文章\" href=\"%e6%8e%a8%e8%8d%90%e6%96%87%e7%ab%a0\"></a></h1><ul><li><a href=\"https://mvbbb.github.io/aa32vk/\">自顶向下与自底向上</a></li><li><a href=\"https://mvbbb.github.io/evg4uw/\">力扣-动态规划</a></li><li><a href=\"https://mvbbb.github.io/gggq6t/\">Leetbook 初级算法</a></li><li><a href=\"http://www.b5mang.com/pt_offer/sub_array_sum_max.html\">动态规划系列-子数组最大和</a></li></ul></div>","prev":{"title":"原来","link":"gp9wvc"},"next":{"title":"《码出高效》笔记","link":"sn0gdd"},"plink":"https://mvbbb.github.io/vf5dyb/","toc":[{"id":"dp-模板分类","title":"dp 模板分类","index":"1"},{"id":"最大(小)路径","title":"最大(小)路径","index":"2","children":[{"id":"931-下降路径最小和","title":"931 下降路径最小和","index":"2.1"},{"id":"983-最低票价","title":"983 最低票价","index":"2.2","children":[{"id":"记忆化递归","title":"记忆化递归","index":"2.2.1"},{"id":"动态规划","title":"动态规划","index":"2.2.2"}]},{"id":"650-只有两个键的键盘","title":"650 只有两个键的键盘","index":"2.3"},{"id":"*279-完全平方数","title":"*279 完全平方数","index":"2.4"}]},{"id":"不同路径","title":"不同路径","index":"3","children":[{"id":"*1155-掷骰子的-n-种方法","title":"*1155 掷骰子的 N 种方法","index":"3.1"}]},{"id":"合并区间","title":"合并区间","index":"4"},{"id":"字符串上的-dp","title":"字符串上的 dp","index":"5"},{"id":"决策问题","title":"决策问题","index":"6"},{"id":"推荐文章","title":"推荐文章","index":"7"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/vf5dyb/\" title=\"D(la)P(ji)\">https://mvbbb.github.io/vf5dyb/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}