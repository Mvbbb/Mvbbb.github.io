{"title":"使用 Java 实现简单的 WebServer","date":"2020-11-24T13:43:44.000Z","date_formatted":{"ll":"Nov 24, 2020","L":"11/24/2020","MM-DD":"11-24"},"link":"cxnppw","comments":true,"tags":["Http","Java","NetWork","Socket"],"categories":["计算机网络"],"updated":"2021-02-03T04:20:59.209Z","content":"<p><strong>Web Server 的功能: 根据用户提供的 Http request, Web Server 返回对应的 Http response. Web Server 也只不过是一个 Application.</strong></p>\n<a id=\"more\"></a>\n<h1 id=\"预备知识\">预备知识<a title=\"#预备知识\" href=\"#预备知识\"></a></h1>\n<ul>\n<li>socket 的基本使用</li>\n<li>HTTP 协议</li>\n<li>Java 知识</li>\n</ul>\n<h2 id=\"socket-的基本使用\">Socket 的基本使用<a title=\"#socket-的基本使用\" href=\"#socket-的基本使用\"></a></h2>\n<p>Socekt 是同一台主机内, 应用层与传输层之间的<strong>接口</strong>. 两个程序通过彼此的 Socket 接口进行信息交换, 建立在 Socket 上的程序不需要关心底层的实现.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Socket 方法</span><br><span class=\"line\"><span class=\"function\">InetAddress <span class=\"title\">getInetAddress</span><span class=\"params\">()</span> : 返回socket连接的地址</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getPort</span><span class=\"params\">()</span>: 返回远程连接这socket的端口</span></span><br><span class=\"line\"><span class=\"function\">InetAddress <span class=\"title\">getLocalAddress</span><span class=\"params\">()</span>: 获取该socket绑定的本地地址</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getLocalPort</span><span class=\"params\">()</span> : 获取这socket绑定的本地端口</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"http-协议\">HTTP 协议<a title=\"#http-协议\" href=\"#http-协议\"></a></h2>\n<p>HTTP 是一个基于 TCP/IP 通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）, 是客户端和服务器交互的一种通迅的格式.<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606271561591-3af625f9-855a-4fd8-839b-1c451ae0f0ea.png#align=left&amp;display=inline&amp;height=576&amp;margin=%5Bobject%20Object%5D&amp;name=1524291150623-eb2eb938-d4b8-41e1-a848-6567cb70cbb1.png&amp;originHeight=576&amp;originWidth=1184&amp;size=289776&amp;status=done&amp;style=none&amp;width=1184\" alt=\"1524291150623-eb2eb938-d4b8-41e1-a848-6567cb70cbb1.png\"><br>\n<strong>Http 请求</strong><br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606272412562-583dccd8-43a3-4215-914e-09d5841d89e3.png#align=left&amp;display=inline&amp;height=219&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=438&amp;originWidth=1448&amp;size=80530&amp;status=done&amp;style=none&amp;width=724\" alt=\"image.png\"><br>\n<strong>Http 响应</strong><br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606272511628-42ec0e43-29d7-4631-bad9-75e6e6c4973f.png#align=left&amp;display=inline&amp;height=95&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=189&amp;originWidth=1457&amp;size=20968&amp;status=done&amp;style=none&amp;width=728.5\" alt=\"image.png\"><br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606272567823-60950fa0-18da-4a1b-ac1d-702a5f7daaed.png#align=left&amp;display=inline&amp;height=350&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=700&amp;originWidth=1440&amp;size=100714&amp;status=done&amp;style=none&amp;width=720\" alt=\"image.png\"><br>\n首先, 用户浏览器向服务器发送 HTTP 请求来获取资源. 之后服务器回复 HTTP 响应. 在本程序中, HTTP 请求有浏览器发出, Java 程序负责响应用户请求, 并返回 HTTP 响应报文. 它们通过 Socket 接口进行 HTTP 报文交换.</p>\n<h2 id=\"java-知识\">Java 知识<a title=\"#java-知识\" href=\"#java-知识\"></a></h2>\n<p>使用到 Java 中的两个主要类来实现 Web Server: java.net.ServerSocket, java.net.ServerSocket<br>\n下图是 TCP 中客户套接字和服务器套接字的连接方式<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606226153626-3a9197cc-b9ff-4e13-bd20-82dee4f0e140.png#align=left&amp;display=inline&amp;height=295&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=589&amp;originWidth=1094&amp;size=100586&amp;status=done&amp;style=none&amp;width=547\" alt=\"image.png\"><br>\nServerSocket 对应上图中的 Welcoming Socket, Socket 对应上图中的 Connection Socket.<br>\nWelcoming Socket 监听请求, 当收到来自用户的请求, 就为其建立一个 Connection Socket.</p>\n<h1 id=\"实现思路\">实现思路<a title=\"#实现思路\" href=\"#实现思路\"></a></h1>\n<ol>\n<li>服务在指定端口进行监听，等待请求。</li>\n<li>当接收到请求后，建立连接，新建一个线程，准备分析报文。</li>\n<li>分析请求报文，对用户请求的网页进行查找，并读取内容。</li>\n<li>构造响应报文的内容。</li>\n<li>将响应报文发送给请求方。</li>\n</ol>\n<h1 id=\"代码实现\">代码实现<a title=\"#代码实现\" href=\"#代码实现\"></a></h1>\n<h2 id=\"第一个版本\">第一个版本<a title=\"#第一个版本\" href=\"#第一个版本\"></a></h2>\n<p>根据 HTTP 报文请求的 URL 返回给用户对应的资源.<br>\n代码实现和项目目录结构如下<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606274244639-8bcc8df0-5137-48ec-85a7-fd4025cffc8b.png#align=left&amp;display=inline&amp;height=64&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=128&amp;originWidth=481&amp;size=7262&amp;status=done&amp;style=none&amp;width=240.5\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String webroot= <span class=\"string\">&quot;version1/WebRoot/&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*在80端口监听的 Welcoming Socekt*/</span></span><br><span class=\"line\">        ServerSocket serverSocket = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">80</span>);</span><br><span class=\"line\">        <span class=\"comment\">/* accept 是一个阻塞方法, 会一直监听, 建立连接之后返回一个 Connection Socket */</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;服务器端等待请求&quot;</span>);</span><br><span class=\"line\">        Socket socket = serverSocket.accept();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;成功建立连接&quot;</span>+socket.toString());</span><br><span class=\"line\">        <span class=\"comment\">/*用于获取 socket 接收的服务端请求报文*/</span></span><br><span class=\"line\">        BufferedReader reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class=\"line\">        <span class=\"comment\">/*Http请求行*/</span></span><br><span class=\"line\">        String httpRequestLine = reader.readLine();</span><br><span class=\"line\">        <span class=\"comment\">/*请求的 uri*/</span></span><br><span class=\"line\">        String uri = httpRequestLine.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">        String url=webroot+uri;</span><br><span class=\"line\">        <span class=\"comment\">/*从磁盘中取出用户请求的资源文件, 并放回给用户*/</span></span><br><span class=\"line\">        FileInputStream fileInputStream = <span class=\"keyword\">new</span> FileInputStream(url);</span><br><span class=\"line\">        OutputStream outputStream = socket.getOutputStream();</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((length=fileInputStream.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            outputStream.write(buffer, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;成功发送给用户&quot;</span>);</span><br><span class=\"line\">        outputStream.flush();</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606274263910-c5d61a1a-47da-45ea-b722-2d7d33f34bad.png#align=left&amp;display=inline&amp;height=88&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=176&amp;originWidth=1805&amp;size=27703&amp;status=done&amp;style=none&amp;width=902.5\" alt=\"image.png\"><br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606274276825-2a66e075-e90c-4ced-a29f-721513035603.png#align=left&amp;display=inline&amp;height=107&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=214&amp;originWidth=1636&amp;size=14089&amp;status=done&amp;style=none&amp;width=818\" alt=\"image.png\"></p>\n<h2 id=\"第二个版本\">第二个版本<a title=\"#第二个版本\" href=\"#第二个版本\"></a></h2>\n<p>1 . 在第一个版本中假如用户请求一个服务器没有的资源, 服务器会报异常, 这一点需要改进. 资源不存在的时候应该返回 404 界面<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606274568269-7c83b37a-2166-4d1d-adf1-21bdefe42168.png#align=left&amp;display=inline&amp;height=112&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=223&amp;originWidth=1705&amp;size=53527&amp;status=done&amp;style=none&amp;width=852.5\" alt=\"image.png\"><br>\n2 . 用户可能不止一次的请求服务器, 我们需要使用循环, 不断监听用户请求.<br>\n3 . 真实情况下, 服务器不止处理一个用户的请求, 在第一个版本中我们只能处理一个用户的请求, 因此我们需要使用多线程, 同时处理多个用户的请求.<br>\n4 . 实现 GET/POST, 并返回标准的 HTTP response</p>\n<p>代码实现和目录结构如下<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606395502266-9889c3a9-7fd2-4532-840e-ee20a6f69f37.png#align=left&amp;display=inline&amp;height=74&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=148&amp;originWidth=358&amp;size=8216&amp;status=done&amp;style=none&amp;width=179\" alt=\"image.png\"><br>\n代码仓库 <a href=\"https://github.com/Mvbbb/small-java-demo/blob/master/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/WebServer.java\" target=\"_blank\" rel=\"external nofollow noopener\">HTTP 服务器</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        ServerSocket serverSocket=<span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Socket socket= serverSocket.accept();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyHttpServer(socket)).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 处理一个 Connection Socket 的请求的 HttpServer</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyHttpServer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String CRLF=<span class=\"string\">&quot;\\r\\n&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket socket;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String webroot;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyHttpServer</span><span class=\"params\">(Socket socket)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;连接到服务器的用户: &quot;</span>+socket);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.socket = socket;</span><br><span class=\"line\">        <span class=\"comment\">// 服务器的资源根目录是当前用户的工作目录</span></span><br><span class=\"line\">        webroot=System.getProperties().getProperty(<span class=\"string\">&quot;user.dir&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 目前只是实现了解析 HTTP 请求</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        BufferedReader reader=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        PrintWriter printWriter=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 读取输入</span></span><br><span class=\"line\">            reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class=\"line\">            <span class=\"comment\">// 写输出</span></span><br><span class=\"line\">            printWriter = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 读入请求行</span></span><br><span class=\"line\">            String requestLine = reader.readLine();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(requestLine==<span class=\"keyword\">null</span>)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 请求行参数: POST/GET 请求uri HTTP版本</span></span><br><span class=\"line\">            String[] requstLineArgs = requestLine.split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 读入请求头</span></span><br><span class=\"line\">            String line = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            String[] keyValue = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            Map&lt;String, String&gt; requestHeaders = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((line = reader.readLine()) != <span class=\"keyword\">null</span> &amp;&amp; !<span class=\"string\">&quot;&quot;</span>.equals(line)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> i = line.indexOf(<span class=\"string\">&quot;: &quot;</span>);</span><br><span class=\"line\">                requestHeaders.put(line.substring(<span class=\"number\">0</span>,i),line.substring(i+<span class=\"number\">2</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 展示HTTP请求行中的参数</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户&quot;</span>+socket.getPort()+<span class=\"string\">&quot;请求方法: &quot;</span>+requstLineArgs[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户&quot;</span>+socket.getPort()+<span class=\"string\">&quot;请求地址: &quot;</span>+requstLineArgs[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户&quot;</span>+socket.getPort()+<span class=\"string\">&quot;的HTTP版本: &quot;</span>+requstLineArgs[<span class=\"number\">2</span>]);</span><br><span class=\"line\">            <span class=\"comment\">// 展示Http 请求头中的参数</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;********************&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户&quot;</span>+socket.getPort()+<span class=\"string\">&quot;请求头参数&quot;</span>);</span><br><span class=\"line\">            showMapValue(requestHeaders);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;********************&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 如果是POST方法继续读入请求体</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;POST&quot;</span>.equals(requstLineArgs[<span class=\"number\">0</span>])) &#123;</span><br><span class=\"line\">                doPost(requstLineArgs, requestHeaders, reader, printWriter);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 如果是GET方法就解析uri</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;GET&quot;</span>.equals(requstLineArgs[<span class=\"number\">0</span>])) &#123;</span><br><span class=\"line\">                doGet(requstLineArgs, requestHeaders, printWriter);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (reader != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    reader.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (printWriter != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                printWriter.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(socket!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;关闭与服务器连接的用户: &quot;</span>+socket);</span><br><span class=\"line\">                    System.out.println();</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 请求行中是 GET 方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> requestLineArgs</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> requestHeaders</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> printWriter</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(String[] requestLineArgs,Map&lt;String,String&gt; requestHeaders,PrintWriter printWriter)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// GET 的 requestLine 的解析</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = requestLineArgs[<span class=\"number\">1</span>].indexOf(<span class=\"string\">&#x27;?&#x27;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// GET 有参数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i!=-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 将参数放入到 getArgs 中</span></span><br><span class=\"line\">            String sourceUri = requestLineArgs[<span class=\"number\">1</span>].substring(<span class=\"number\">0</span>, i);</span><br><span class=\"line\">            String[] s = requestLineArgs[<span class=\"number\">1</span>].substring(i + <span class=\"number\">1</span>).split(<span class=\"string\">&quot;&amp;&quot;</span>);</span><br><span class=\"line\">            String[] keyValue = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            Map&lt;String, String&gt; getArgs = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (String ss : s) &#123;</span><br><span class=\"line\">                String[] split = ss.split(<span class=\"string\">&quot;=&quot;</span>);</span><br><span class=\"line\">                getArgs.put(split[<span class=\"number\">0</span>], split[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 展示GET请求链接中的参数</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;********************&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户&quot;</span>+socket.getPort()+<span class=\"string\">&quot;GET 中的参数&quot;</span>);</span><br><span class=\"line\">            showMapValue(getArgs);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;********************&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            writeFile(printWriter,requestHeaders,sourceUri);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123; <span class=\"comment\">// 没有额外参数, 属于直接访问</span></span><br><span class=\"line\">            writeFile(printWriter,requestHeaders,requestLineArgs[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 请求行中是 POST 方法, 现在还不会处理POST方法, 先挖坑</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> requestLineArgs</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> requestHeaders</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> reader</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> printWriter</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(String[] requestLineArgs,Map&lt;String,String&gt; requestHeaders,BufferedReader reader,PrintWriter printWriter)</span></span>&#123;</span><br><span class=\"line\">        String sourceUri=requestLineArgs[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"comment\">// 还需要读入 requestBody</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将用户请求的文件发送给用户</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> printWriter</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> requestHeaders</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> uri</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeFile</span><span class=\"params\">(PrintWriter printWriter,Map&lt;String,String&gt; requestHeaders,String uri)</span> </span>&#123;</span><br><span class=\"line\">        String url=webroot+uri;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;用户&quot;</span>+socket.getPort()+<span class=\"string\">&quot;请求文件地址: &quot;</span>+url);</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(url);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String statusLine=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">            String contentType=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">            String entityBody=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 请求的文件存在</span></span><br><span class=\"line\">             <span class=\"keyword\">if</span>(file.exists()&amp;&amp;file.isFile())&#123;</span><br><span class=\"line\">                statusLine =<span class=\"string\">&quot;HTTP/1.0 200 OK&quot;</span>+CRLF;</span><br><span class=\"line\">                contentType=<span class=\"string\">&quot;Content-Type&quot;</span>  +contentType(file.toString())+CRLF;</span><br><span class=\"line\">                printWriter.print(statusLine);</span><br><span class=\"line\">                printWriter.print(contentType);</span><br><span class=\"line\">                printWriter.print(CRLF); <span class=\"comment\">//之前的为响应行+响应头部, 之后的是响应正文, 之间用 CRLF 分隔</span></span><br><span class=\"line\">                 <span class=\"comment\">// 将文件内容发送给用户</span></span><br><span class=\"line\">                 Scanner scanner = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> FileInputStream(file));</span><br><span class=\"line\">                 <span class=\"keyword\">while</span> (scanner.hasNextLine()) &#123;</span><br><span class=\"line\">                     printWriter.println(scanner.nextLine());</span><br><span class=\"line\">                 &#125;</span><br><span class=\"line\">                 printWriter.flush();</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                statusLine=<span class=\"string\">&quot;HTTP/1.0 404 Not Found&quot;</span>+CRLF;</span><br><span class=\"line\">                contentType=<span class=\"string\">&quot;Content-Type: text/html&quot;</span>+CRLF;</span><br><span class=\"line\">                entityBody=<span class=\"string\">&quot;&lt;HTML&gt;&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;&lt;HEAD&gt;&lt;TITLE&gt;Not Found&lt;/TITLE&gt;&lt;/HEAD&gt;&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;&lt;BODY&gt;Not Found&lt;/BODY&gt;&lt;/HTML&gt;&quot;</span>;</span><br><span class=\"line\">                 printWriter.print(statusLine);</span><br><span class=\"line\">                 printWriter.print(contentType);</span><br><span class=\"line\">                 printWriter.print(CRLF); <span class=\"comment\">//之前的为响应行+响应头部, 之后的是响应正文, 之间用 CRLF 分隔</span></span><br><span class=\"line\">                 printWriter.print(entityBody);</span><br><span class=\"line\">                 printWriter.flush();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据用户请求的文件类型, 返回符合mime标准的文件类型</span></span><br><span class=\"line\"><span class=\"comment\">     * 目前只实现了请求html文件的功能</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fileName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">contentType</span><span class=\"params\">(String fileName)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fileName.endsWith(<span class=\"string\">&quot;.htm&quot;</span>)||fileName.endsWith(<span class=\"string\">&quot;.html&quot;</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;text/html&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showMapValue</span><span class=\"params\">(Map&lt;String,String&gt; map)</span></span>&#123;</span><br><span class=\"line\">        Set&lt;Map.Entry&lt;String, String&gt;&gt; entries = map.entrySet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;String, String&gt; entry : entries) &#123;</span><br><span class=\"line\">            System.out.println(entry.getKey()+<span class=\"string\">&quot;: &quot;</span>+entry.getValue());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1606397469282-42f17800-1e86-4341-9542-b2acab5f250e.png#align=left&amp;display=inline&amp;height=515&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1030&amp;originWidth=1920&amp;size=68141&amp;status=done&amp;style=none&amp;width=960\" alt=\"image.png\"><br>\n控制台打印</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接到服务器的用户: Socket[addr=/<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">1</span>,port=<span class=\"number\">11148</span>,localport=<span class=\"number\">8000</span>]</span><br><span class=\"line\">用户<span class=\"number\">11147</span>请求方法: GET</span><br><span class=\"line\">用户<span class=\"number\">11147</span>请求地址: /index.html</span><br><span class=\"line\">用户<span class=\"number\">11147</span>的HTTP版本: HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">********************</span><br><span class=\"line\">用户<span class=\"number\">11147</span>请求头参数</span><br><span class=\"line\">Cookie: Idea-48934e7a=d9468800-fffb-4bce-<span class=\"number\">8707</span>-98eda7648a0b; Webstorm-bee48fc1=<span class=\"number\">645e8992</span>-2d9b-<span class=\"number\">4176</span>-af5d-21b7e87ac442</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,image/apng,*<span class=\"comment\">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class=\"line\"><span class=\"comment\">Upgrade-Insecure-Requests: 1</span></span><br><span class=\"line\"><span class=\"comment\">Connection: keep-alive</span></span><br><span class=\"line\"><span class=\"comment\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36</span></span><br><span class=\"line\"><span class=\"comment\">Sec-Fetch-Site: none</span></span><br><span class=\"line\"><span class=\"comment\">Sec-Fetch-Dest: document</span></span><br><span class=\"line\"><span class=\"comment\">Host: localhost:8000</span></span><br><span class=\"line\"><span class=\"comment\">Sec-Fetch-User: ?1</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate, br</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh,en-US;q=0.9,en;q=0.8,zh-CN;q=0.7</span></span><br><span class=\"line\"><span class=\"comment\">Sec-Fetch-Mode: navigate</span></span><br><span class=\"line\"><span class=\"comment\">********************</span></span><br><span class=\"line\"><span class=\"comment\">用户11147请求文件地址: E:\\Desktop\\新建文件夹 (2)/index.html</span></span><br><span class=\"line\"><span class=\"comment\">关闭与服务器连接的用户: Socket[addr=/0:0:0:0:0:0:0:1,port=11147,localport=8000]</span></span><br></pre></td></tr></table></figure>\n<p>注意, 该版本并不完美</p>\n<ol>\n<li>在 Linux 环境下好像会出现路径转义错误</li>\n<li>并不能根据请求参数的不同做出不同的响应, 只能响应最基本的请求 HTML 文件功能, 并判断是否响应 404</li>\n<li>GET 请求的中文编码问题没解决</li>\n</ol>\n<h1 id=\"参考资料\">参考资料<a title=\"#参考资料\" href=\"#参考资料\"></a></h1>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==%E2%88%A3=2247494842&amp;idx=2&amp;sn=f6741f16e652eb51ec4f25f088bec07b&amp;chksm=ebd4adbbdca324adaed381e1d6b0e1e4215924fffb784847a418bcfa0ace4ead05d381ef39a7&amp;mpshare=1&amp;scene=23&amp;srcid=1124GpVbhD0Aj7LcmrydqzqM&amp;sharer_sharetime=1606225397680&amp;sharer_shareid=ef785d0dcb6c4b3c08f0ecb4f45d01aa#rd\" target=\"_blank\" rel=\"external nofollow noopener\">万字长文复习 HTTP</a><br>\n<a href=\"https://www.runoob.com/http/http-tutorial.html\" target=\"_blank\" rel=\"external nofollow noopener\">菜鸟教程: Http </a><br>\n<a href=\"https://www.cnblogs.com/gxz-sw/p/6761984.html\" target=\"_blank\" rel=\"external nofollow noopener\">HTTP 请求头和请求体</a><br>\n<a href=\"https://juejin.cn/post/6844903956536098823\" target=\"_blank\" rel=\"external nofollow noopener\">java Socket + 自定义线程池 实现 web 服务器 仿 Servlet</a><br>\n<a href=\"https://blog.cugxuan.cn/2017/07/20/Java/java%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84http%E6%9C%8D%E5%8A%A1%E5%99%A8/\" target=\"_blank\" rel=\"external nofollow noopener\">java 实现简单的 http 服务器</a><br>\n<a href=\"https://www.liaoxuefeng.com/wiki/1252599548343744/1305207629676577\" target=\"_blank\" rel=\"external nofollow noopener\">廖雪峰-Java 网络编程</a></p>\n<div><h1 id=\"推荐文章\">推荐文章<a title=\"#推荐文章\" href=\"%e6%8e%a8%e8%8d%90%e6%96%87%e7%ab%a0\"></a></h1><ul><li><a href=\"https://mvbbb.github.io/rptlxk/\">计算机网络学习总结[转载][2]</a></li><li><a href=\"https://mvbbb.github.io/hf30zm/\">计算机网络学习总结[转载][1]</a></li><li><a href=\"https://mvbbb.github.io/hy5u9w/\">JDBC与mysql数据库交互</a></li><li><a href=\"https://mvbbb.github.io/sn0gdd/\">《码出高效》笔记</a></li><li><a href=\"https://kevin1061517.github.io/blog/posts/Java/8f30/\">Practical Java筆記</a></li></ul></div>","prev":{"title":"20/12/1 近期规划","link":"izwdvz"},"next":{"title":"在服务器上部署运行Socket","link":"bvgh8x"},"plink":"https://mvbbb.github.io/cxnppw/","toc":[{"id":"预备知识","title":"预备知识","index":"1","children":[{"id":"socket-的基本使用","title":"Socket 的基本使用","index":"1.1"},{"id":"http-协议","title":"HTTP 协议","index":"1.2"},{"id":"java-知识","title":"Java 知识","index":"1.3"}]},{"id":"实现思路","title":"实现思路","index":"2"},{"id":"代码实现","title":"代码实现","index":"3","children":[{"id":"第一个版本","title":"第一个版本","index":"3.1"},{"id":"第二个版本","title":"第二个版本","index":"3.2"}]},{"id":"参考资料","title":"参考资料","index":"4"},{"id":"推荐文章","title":"推荐文章","index":"5"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/cxnppw/\" title=\"使用 Java 实现简单的 WebServer\">https://mvbbb.github.io/cxnppw/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}