{"title":"在服务器上部署运行Socket","date":"2020-11-20T05:46:46.000Z","date_formatted":{"ll":"Nov 20, 2020","L":"11/20/2020","MM-DD":"11-20"},"link":"bvgh8x","comments":true,"categories":["计算机网络"],"updated":"2021-02-03T04:20:59.221Z","content":"<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1605851968328-a1a7a928-e184-4948-88b4-e7993eeb9cdf.png#align=left&amp;display=inline&amp;height=31&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=62&amp;originWidth=1079&amp;size=13086&amp;status=done&amp;style=none&amp;width=539.5\" alt=\"image.png\"><br>\n环境: JDK11+Centos7</p>\n<a id=\"more\"></a>\n<h1 id=\"开通服务器端口\">开通服务器端口<a title=\"#开通服务器端口\" href=\"#开通服务器端口\"></a></h1>\n<ol>\n<li>宝塔面板开通</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1605851354963-dfaa0035-effe-43ca-b3a9-b7de5df27343.png#align=left&amp;display=inline&amp;height=84&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=167&amp;originWidth=1628&amp;size=23162&amp;status=done&amp;style=none&amp;width=814\" alt=\"image.png\"><br>\n2 . 服务器商安全组放行<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1605851336398-ed35797a-7cb5-4788-8ad2-a3cb95e02989.png#align=left&amp;display=inline&amp;height=155&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=310&amp;originWidth=1594&amp;size=43392&amp;status=done&amp;style=none&amp;width=797\" alt=\"image.png\"></p>\n<h1 id=\"编写代码\">编写代码<a title=\"#编写代码\" href=\"#编写代码\"></a></h1>\n<p>服务器端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UDPServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        DatagramSocket socket = <span class=\"keyword\">new</span> DatagramSocket(<span class=\"number\">12000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] bys=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length =bys.length;</span><br><span class=\"line\">        DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(bys, length);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            socket.receive(packet);</span><br><span class=\"line\">            InetAddress inetAddress = packet.getAddress();</span><br><span class=\"line\">            String ip= inetAddress.getHostAddress();</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] data = packet.getData();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> len= packet.getLength();</span><br><span class=\"line\">            String s = <span class=\"keyword\">new</span> String(data, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">            System.out.println(ip+<span class=\"string\">&quot;传过来的数据是 : &quot;</span>+s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>客户端(本地运行)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UDPClient</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 DatagramSocket 类</span></span><br><span class=\"line\">        DatagramSocket socket = <span class=\"keyword\">new</span> DatagramSocket();</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] bys=<span class=\"string\">&quot;你好, 我是客户端 &quot;</span>.getBytes();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = bys.length;</span><br><span class=\"line\"></span><br><span class=\"line\">        InetAddress address = InetAddress.getByName(<span class=\"string\">&quot;***.***.***.***&quot;</span>);<span class=\"comment\">// 替换为你的服务器IP</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> port =<span class=\"number\">12000</span>;</span><br><span class=\"line\">        DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(bys,length,address,port);</span><br><span class=\"line\">        socket.send(packet);</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"运行代码\">运行代码<a title=\"#运行代码\" href=\"#运行代码\"></a></h1>\n<p>1 . 将服务器代码上传到服务器, 编译运行</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac UDPServer.java <span class=\"comment\">//编译</span></span><br><span class=\"line\">java UDPServer <span class=\"comment\">// 运行</span></span><br></pre></td></tr></table></figure>\n<p>2 . 本地运行 UDPClient, 服务器端会打印内容<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1605851968328-a1a7a928-e184-4948-88b4-e7993eeb9cdf.png#align=left&amp;display=inline&amp;height=31&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=62&amp;originWidth=1079&amp;size=13086&amp;status=done&amp;style=none&amp;width=539.5\" alt=\"image.png\"></p>\n<p><strong>后续:</strong><br>\n假如不小心关闭了终端, 怎样结束服务器端 UDPServer 程序?<br>\n1 . 查看 12000 端口占用情况, 找到 Java 进程 PID: <code>netstat -ntulp |grep 12000</code> <br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1605852218515-076b71ee-ac38-46ad-956a-61762b5e1e64.png#align=left&amp;display=inline&amp;height=22&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=43&amp;originWidth=1300&amp;size=7313&amp;status=done&amp;style=none&amp;width=650\" alt=\"image.png\">    <br>\nPID= 23531<br>\n2 . 使用 <code>kill -9 [PID]</code>  结束 Java 进程</p>\n<p>其他 Socket 程序都是以类似的方式部署运行.</p>\n<p>更多的 Socket 程序请查看 <a href=\"https://github.com/Mvbbb/small-java-demo/tree/master/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B\" target=\"_blank\" rel=\"external nofollow noopener\">Java 网络编程</a></p>\n","prev":{"title":"使用 Java 实现简单的 WebServer","link":"cxnppw"},"next":{"title":"文件上传下载","link":"vuhe3q"},"plink":"https://mvbbb.github.io/bvgh8x/","toc":[{"id":"开通服务器端口","title":"开通服务器端口","index":"1"},{"id":"编写代码","title":"编写代码","index":"2"},{"id":"运行代码","title":"运行代码","index":"3"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/bvgh8x/\" title=\"在服务器上部署运行Socket\">https://mvbbb.github.io/bvgh8x/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}