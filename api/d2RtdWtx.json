{"title":"挑战程序设计竞赛-习题","date":"2020-10-04T04:26:00.000Z","date_formatted":{"ll":"Oct 4, 2020","L":"10/04/2020","MM-DD":"10-04"},"link":"wdmukq","comments":true,"tags":["算法"],"categories":["备战蓝桥杯","数据结构与算法"],"updated":"2021-02-03T04:20:59.785Z","content":"<p>希望不要太难<br>\n英文题目看着脑壳痛</p>\n<a id=\"more\"></a>\n<h1 id=\"第二章\">第二章<a title=\"#第二章\" href=\"#第二章\"></a></h1>\n<h2 id=\"最基础的&quot;穷竭&quot;搜索\">最基础的&quot;穷竭&quot;搜索<a title=\"#最基础的&quot;穷竭&quot;搜索\" href=\"#最基础的&quot;穷竭&quot;搜索\"></a></h2>\n<h3 id=\"深度优先搜索\">深度优先搜索<a title=\"#深度优先搜索\" href=\"#深度优先搜索\"></a></h3>\n<h4 id=\"red-and-black\"><strong>Red and Black</strong><a title=\"#red-and-black\" href=\"#red-and-black\"></a></h4>\n<blockquote>\n<p><a href=\"http://poj.org/problem?id=1979\" target=\"_blank\" rel=\"external nofollow noopener\">http://poj.org/problem?id=1979</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> res;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> flags[maxn][maxn];</span><br><span class=\"line\"><span class=\"keyword\">char</span> room [maxn][maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> w,h;</span><br><span class=\"line\"><span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dx[<span class=\"number\">4</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,dy[<span class=\"number\">4</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    flags[x][y]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">    res++;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> nx=x+dx[i],ny=y+dy[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nx&gt;=<span class=\"number\">0</span>&amp;&amp;nx&lt;h&amp;&amp;ny&gt;=<span class=\"number\">0</span>&amp;&amp;ny&lt; w &amp;&amp;room[nx][ny]==<span class=\"string\">&#x27;.&#x27;</span>&amp;&amp;flags[nx][ny]==<span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">            dfs(nx,ny);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;w&gt;&gt;h)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 读入</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(w==<span class=\"number\">0</span>&amp;&amp;h==<span class=\"number\">0</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;h;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;w;j++)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cin</span>&gt;&gt;room[i][j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(room[i][j]==<span class=\"string\">&#x27;@&#x27;</span>)&#123;</span><br><span class=\"line\">                    x=i;y=j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 深度优先搜索</span></span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(flags, <span class=\"literal\">false</span>, <span class=\"keyword\">sizeof</span>(flags));</span><br><span class=\"line\">        res=<span class=\"number\">0</span>;</span><br><span class=\"line\">        dfs(x,y);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;res&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>优化方法, 不用 flags 数组, 只需要将访问过的位置标记为 ‘#’, 下次就无法访问了, 效果相同</p>\n<h4 id=\"property-distribution\">Property Distribution<a title=\"#property-distribution\" href=\"#property-distribution\"></a></h4>\n<blockquote>\n<p><a href=\"https://vjudge.net/problem/Aizu-0118\" target=\"_blank\" rel=\"external nofollow noopener\">https://vjudge.net/problem/Aizu-0118</a></p>\n</blockquote>\n<p>题意：有三种水果分别用,‘@’,‘*’,'#'三种符号表示，上下左右相连的同种水果被看做是一个区域，问一共有多少个区域</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> field[maxn][maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dx[<span class=\"number\">4</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,dy[<span class=\"number\">4</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> h,w;</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">char</span> curr)</span></span>&#123;</span><br><span class=\"line\">    field[x][y]=<span class=\"string\">&#x27;!&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> nx=x+dx[i],ny=y+dy[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nx&gt;=<span class=\"number\">0</span>&amp;&amp;nx&lt;h&amp;&amp;ny&gt;=<span class=\"number\">0</span>&amp;&amp;ny&lt;w&amp;&amp;field[nx][ny]==curr)&#123;</span><br><span class=\"line\">            dfs(nx,ny,curr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;h&gt;&gt;w)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(h==<span class=\"number\">0</span>&amp;&amp;w==<span class=\"number\">0</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;h;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;w;j++)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cin</span>&gt;&gt;field[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;h;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;w;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(field[i][j]!=<span class=\"string\">&#x27;!&#x27;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 每次只遍历一个符号</span></span><br><span class=\"line\">                    dfs(i,j,field[i][j]);</span><br><span class=\"line\">                    ans++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ball\">Ball<a title=\"#ball\" href=\"#ball\"></a></h4>\n<blockquote>\n<p><a href=\"http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0033\" target=\"_blank\" rel=\"external nofollow noopener\">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0033</a></p>\n</blockquote>\n<p>选择放还是不放, 构成一颗决策树<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1601792081847-e3629880-0166-42d4-a3d5-d447f410458f.png#align=left&amp;display=inline&amp;height=45&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=90&amp;originWidth=1110&amp;size=20381&amp;status=done&amp;style=none&amp;width=555\" alt=\"image.png\"><br>\nAC 了!!! woc, 不敢相信, 我自己写的, 太感动了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> balls[<span class=\"number\">15</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">rec</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> preb,<span class=\"keyword\">int</span> prec)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i==<span class=\"number\">10</span>)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> b=balls[i]&gt;=preb?rec(i+<span class=\"number\">1</span>,balls[i],prec):<span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> c=balls[i]&gt;=prec?rec(i+<span class=\"number\">1</span>,preb,balls[i]):<span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b||c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i!=<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;balls[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rec(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>))</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"*curling-2.0\">*Curling 2.0<a title=\"#*curling-2.0\" href=\"#*curling-2.0\"></a></h4>\n<blockquote>\n<p><a href=\"http://poj.org/problem?id=3009\" target=\"_blank\" rel=\"external nofollow noopener\">http://poj.org/problem?id=3009</a></p>\n</blockquote>\n<p>好难啊<br>\n<strong>题目翻译</strong><br>\n每次扔一个球, 撞到墙的话, 墙就被破坏, 该球停在发生撞击的前一个位置. 在该位置继续扔球, 直到扔到终点位置.<br>\n注意, 假如相邻位置上有墙, 就不能朝该位置扔.<br>\n最多扔 10 次<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1601793957880-86596c7c-a05d-4322-b90a-26daa4618e77.png#align=left&amp;display=inline&amp;height=108&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=215&amp;originWidth=453&amp;size=13024&amp;status=done&amp;style=none&amp;width=226.5\" alt=\"image.png\"><br>\nb 为球经过 a 的抛法后剩下的墙<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1601793971696-b96065a3-e0a9-40fb-8df9-592d36006735.png#align=left&amp;display=inline&amp;height=83&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=166&amp;originWidth=579&amp;size=9850&amp;status=done&amp;style=none&amp;width=289.5\" alt=\"image.png\"><br>\na 中只能朝上或者右仍. bc 中, 碰到墙, 该墙被破坏, 球停在墙前.<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1601794392965-51db7bab-17d3-40e7-8035-4fe5151e2c13.png#align=left&amp;display=inline&amp;height=110&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=220&amp;originWidth=216&amp;size=6088&amp;status=done&amp;style=none&amp;width=108\" alt=\"image.png\">e<br>\n碰到墙才开始下一次递归</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/xxiaobaib/article/details/78367897?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-2.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-2.channel_param\" target=\"_blank\" rel=\"external nofollow noopener\">https://blog.csdn.net/xxiaobaib/article/details/78367897?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-2.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-2.channel_param</a> &gt; <a href=\"https://blog.csdn.net/c138rick/article/details/78422725?utm_medium=distribute.pc_relevant.none-task-blog-title-9&amp;spm=1001.2101.3001.4242\" target=\"_blank\" rel=\"external nofollow noopener\">https://blog.csdn.net/c138rick/article/details/78422725?utm_medium=distribute.pc_relevant.none-task-blog-title-9&amp;spm=1001.2101.3001.4242</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先鸽鸽鸽鸽</span><br></pre></td></tr></table></figure>\n<h3 id=\"广度优先搜索\">广度优先搜索<a title=\"#广度优先搜索\" href=\"#广度优先搜索\"></a></h3>\n<h4 id=\"cheese\">Cheese<a title=\"#cheese\" href=\"#cheese\"></a></h4>\n<blockquote>\n<p><a href=\"https://vjudge.net/problem/Aizu-0558\" target=\"_blank\" rel=\"external nofollow noopener\">https://vjudge.net/problem/Aizu-0558</a> &gt; <a href=\"https://blog.csdn.net/queque_heiya/article/details/104086807\" target=\"_blank\" rel=\"external nofollow noopener\">https://blog.csdn.net/queque_heiya/article/details/104086807</a></p>\n</blockquote>\n<p>初始的体力值是 1, 奶酪的硬度依次增加, 可以得出, 每次只能吃硬度等于自身体力值的奶酪<br>\n所以 吃奶酪的顺序是 1-&gt;2-&gt;3…-&gt;n<br>\n我们要求这段的最短距离, 也就是每一小段的最短距离的和</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> H,W,N; <span class=\"comment\">// 高度 宽度 数量</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> maze[maxn][maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[maxn][maxn]; <span class=\"comment\">// 开始点到每个点的距离</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> sx,sy,gx,gy; <span class=\"comment\">// 开始坐标  结束坐标</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"built_in\">pair</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; P; <span class=\"comment\">// 保存坐标</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> dx[<span class=\"number\">4</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,dy[<span class=\"number\">4</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;H;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;W;j++)&#123;</span><br><span class=\"line\">            d[i][j]=INF;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;P&gt; q;</span><br><span class=\"line\">    q.push(P(sx,sy));</span><br><span class=\"line\">    d[sx][sy]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q.size())&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 从队列中取出一个, 遍历他的4个方向</span></span><br><span class=\"line\">        P p=q.front(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=p.first,y=p.second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x==gx&amp;&amp;y==gy)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nx=x+dx[i],ny=y+dy[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nx&gt;=<span class=\"number\">0</span>&amp;&amp;nx&lt;H&amp;&amp;ny&gt;=<span class=\"number\">0</span>&amp;&amp;ny&lt;W&amp;&amp;maze[nx][ny]!=<span class=\"string\">&#x27;X&#x27;</span>&amp;&amp;d[nx][ny]==INF)&#123;</span><br><span class=\"line\">                q.push(P(nx,ny));</span><br><span class=\"line\">                d[nx][ny]=d[x][y]+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> d[gx][gy];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;H&gt;&gt;W&gt;&gt;N;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;H;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;W;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> temp;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;temp;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp==<span class=\"string\">&#x27;S&#x27;</span>) sx=i,sy=j; <span class=\"comment\">// 第一次的开始坐标</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(temp&gt;=<span class=\"string\">&#x27;0&#x27;</span>&amp;&amp;temp&lt;=<span class=\"string\">&#x27;9&#x27;</span>) maze[i][j]=temp-<span class=\"string\">&#x27;0&#x27;</span>; <span class=\"comment\">//奶酪厂</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> maze[i][j]=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt=<span class=\"number\">1</span>; <span class=\"comment\">// 当前要去吃的奶酪厂</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>; <span class=\"comment\">//路径长度总和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;H;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;W;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(maze[i][j]==cnt)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;i=&quot;</span>&lt;&lt;i&lt;&lt;<span class=\"string\">&quot; j=&quot;</span>&lt;&lt;j&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">                init();</span><br><span class=\"line\">                gx=i,gy=j;</span><br><span class=\"line\">                ans+=bfs();</span><br><span class=\"line\">                sx=gx,sy=gy;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">                i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> 对于 bfs 函数, 他只需要知道起点坐标和结束坐标, 放回起点坐标到结束坐标的最短距离</span></span><br><span class=\"line\"><span class=\"comment\"> 需要使用到 距离数组, 起点, 结束坐标. 使用队列来保持周围的坐标位置</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> 对于main</span></span><br><span class=\"line\"><span class=\"comment\"> 读取数据, 用 bfs 计算 s-&gt;1, 1-&gt;2 .... n-1-&gt;n 的最短距离的和</span></span><br><span class=\"line\"><span class=\"comment\"> 他需要提供给 bfs 每一小段的起点坐标, 终点坐标.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"seven-puzzle\">Seven Puzzle<a title=\"#seven-puzzle\" href=\"#seven-puzzle\"></a></h4>\n<blockquote>\n<p><a href=\"https://github.com/yogykwan/acm-challenge-workbook/blob/master/src/aoj0121.cpp\" target=\"_blank\" rel=\"external nofollow noopener\">GitHub 题解</a></p>\n</blockquote>\n<p>给定输入序列, 通过零号牌与上下左右交换得到 0-8 的有序排列</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[<span class=\"number\">4</span>]=&#123;<span class=\"number\">-1</span>,<span class=\"number\">1</span>,<span class=\"number\">-4</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;mymap; <span class=\"comment\">// 当前局面与最短路的映射</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"built_in\">string</span>&gt; q;</span><br><span class=\"line\">    q.push(<span class=\"string\">&quot;01234567&quot;</span>);</span><br><span class=\"line\">    mymap[<span class=\"string\">&quot;01234567&quot;</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q.size())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> cur=q.front();</span><br><span class=\"line\">        <span class=\"built_in\">string</span> nxt;</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=(<span class=\"keyword\">int</span>)cur.find(<span class=\"string\">&quot;0&quot;</span>); <span class=\"comment\">// 找到局面中0的位置</span></span><br><span class=\"line\">        <span class=\"comment\">// 朝4个方向试探</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> np=p+d[i];</span><br><span class=\"line\">            <span class=\"comment\">// 注意这种试探方法, 在第一行末尾不能向右边试探, 在第二行开始不能向左边试探</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(np&gt;=<span class=\"number\">0</span>&amp;&amp;np&lt;<span class=\"number\">8</span>&amp;&amp;(p!=<span class=\"number\">3</span>||d[i]!=<span class=\"number\">1</span>)&amp;&amp;(p!=<span class=\"number\">4</span>||d[i]!=<span class=\"number\">-1</span>))&#123;</span><br><span class=\"line\">                nxt = cur;</span><br><span class=\"line\">                <span class=\"comment\">// 将0与被试探的字符交换</span></span><br><span class=\"line\">                swap(nxt[p],nxt[np]);</span><br><span class=\"line\">                <span class=\"comment\">// 第一次发现这种字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(mymap.find(nxt)==mymap.end())&#123;</span><br><span class=\"line\">                    mymap[nxt]=mymap[cur]+<span class=\"number\">1</span>; <span class=\"comment\">//这种局面是在 cur 的基础上多操作一步得来的</span></span><br><span class=\"line\">                    q.push(nxt);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 找出所有的排列可能性</span></span><br><span class=\"line\">    bfs();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;a[<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">8</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 拼接成字符串</span></span><br><span class=\"line\">        <span class=\"built_in\">string</span> s=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)&#123;</span><br><span class=\"line\">            s+=a[i]+<span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mymap.find(s)==mymap.end())</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">-1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;mymap[s]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"深度优先搜索-1\">深度优先搜索<a title=\"#深度优先搜索-1\" href=\"#深度优先搜索-1\"></a></h3>\n<h4 id=\"smallest-difference\">Smallest Difference<a title=\"#smallest-difference\" href=\"#smallest-difference\"></a></h4>\n<p>给定一些数字(0~9), 任意两个数由这些数字组成, 求这个数之差的绝对值的最小值</p>\n<h2 id=\"它们其实都是图\">它们其实都是图<a title=\"#它们其实都是图\" href=\"#它们其实都是图\"></a></h2>\n<h3 id=\"最短路问题\">最短路问题<a title=\"#最短路问题\" href=\"#最短路问题\"></a></h3>\n<h4 id=\"convenient-location\">Convenient Location<a title=\"#convenient-location\" href=\"#convenient-location\"></a></h4>\n<blockquote>\n<p><a href=\"https://vjudge.net/problem/Aizu-0189\" target=\"_blank\" rel=\"external nofollow noopener\">https://vjudge.net/problem/Aizu-0189</a></p>\n</blockquote>\n<p>最小生成树问题: 使的所有节点连接起来的路径长度最短. 显然不符合本题要求<br>\n本题要求一个城市到其他办公室的和的最短路径, 显然是最短路径问题<br>\n解题思路, 使用 folyd 算法计算不同办公室之间的最短距离, 之后枚举一个办公室到其他办公室的距离之和, 找到最小的那一个<br>\n之后再考虑一下用 dijkstra 算法可以做不, 还没太弄明白</p>\n<blockquote>\n<p><a href=\"https://zhidao.baidu.com/question/2138336660610101908.html\" target=\"_blank\" rel=\"external nofollow noopener\">https://zhidao.baidu.com/question/2138336660610101908.html</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(x,y) (x&gt;y?y:x)</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[maxn][maxn]; <span class=\"comment\">// 不同点之间的最短距离</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n; <span class=\"comment\">// 边的数量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> maxx; <span class=\"comment\">// 最大的城市编号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">folyd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;=maxx;k++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=maxx;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=maxx;j++)&#123;</span><br><span class=\"line\">                d[i][j]=min(d[i][j],d[i][k]+d[k][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;n&amp;&amp;n)&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">memset</span>(d,INF,<span class=\"keyword\">sizeof</span>(d));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a,b,c;</span><br><span class=\"line\">        maxx=<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">            d[a][b]=d[b][a]=c;</span><br><span class=\"line\">            maxx=max(maxx,max(a,b));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=maxx;i++)&#123;</span><br><span class=\"line\">        \td[i][i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        folyd(); <span class=\"comment\">// 不同点之间的最短距离</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans=INF;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> pos=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=maxx;i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 遍历某个办公室到其他地方</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=maxx;j++)</span><br><span class=\"line\">                sum+=d[i][j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ans&gt;sum)&#123;</span><br><span class=\"line\">                ans=sum;</span><br><span class=\"line\">                pos=i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;pos&lt;&lt;<span class=\"string\">&quot; &quot;</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"six-degrees-of-cowvin-bacon\">Six Degrees of Cowvin Bacon<a title=\"#six-degrees-of-cowvin-bacon\" href=\"#six-degrees-of-cowvin-bacon\"></a></h4>\n<p>和上一道题类似<br>\n不过还是不知道是否可以使用 dijkstra 算法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">350</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[maxn][maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">folyd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>;k&lt;=n;k++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t\td[i][j]=min(d[i][j],d[i][k]+d[k][j]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 初始化 d 数组</span></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(d,INF,<span class=\"keyword\">sizeof</span>(d));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;maxn;i++)&#123;</span><br><span class=\"line\">\t\td[i][i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"comment\">// 读入每一个小团体</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将同一个团体的成员距离设置为1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> k;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;k;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> b[maxn];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)<span class=\"built_in\">cin</span>&gt;&gt;b[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;k;j++)&#123;</span><br><span class=\"line\">\t\t\t\td[b[i]][b[j]]=d[b[j]][b[i]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfolyd();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mindissum=INF;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\tsum+=d[i][j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tmindissum=min(sum,mindissum);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;mindissum*<span class=\"number\">100</span>/(n<span class=\"number\">-1</span>)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><div><h1 id=\"推荐文章\">推荐文章<a title=\"#推荐文章\" href=\"%e6%8e%a8%e8%8d%90%e6%96%87%e7%ab%a0\"></a></h1><ul><li><a href=\"https://mvbbb.github.io/lvkhi9/\">洛谷【搜索】暴力专项训练</a></li><li><a href=\"https://mvbbb.github.io/ehshi7/\">八皇后问题</a></li><li><a href=\"https://mvbbb.github.io/nftmte/\">位运算</a></li><li><a href=\"https://mvbbb.github.io/wu5oin/\">kuangbin 题单</a></li><li><a href=\"https://lailin.xyz/post/defer.html\">Go数据结构与算法05-栈下: 深入理解 defer</a></li></ul></div>","prev":{"title":"刷题!刷题!","link":"taxvu3"},"next":{"title":"挑战程序设计竞赛-例题","link":"po3i4a"},"plink":"https://mvbbb.github.io/wdmukq/","toc":[{"id":"第二章","title":"第二章","index":"1","children":[{"id":"最基础的&quot;穷竭&quot;搜索","title":"最基础的&quot;穷竭&quot;搜索","index":"1.1","children":[{"id":"深度优先搜索","title":"深度优先搜索","index":"1.1.1"},{"id":"广度优先搜索","title":"广度优先搜索","index":"1.1.2"},{"id":"深度优先搜索-1","title":"深度优先搜索","index":"1.1.3"}]},{"id":"它们其实都是图","title":"它们其实都是图","index":"1.2","children":[{"id":"最短路问题","title":"最短路问题","index":"1.2.1"}]}]},{"id":"推荐文章","title":"推荐文章","index":"2"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/wdmukq/\" title=\"挑战程序设计竞赛-习题\">https://mvbbb.github.io/wdmukq/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}