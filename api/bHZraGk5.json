{"title":"洛谷【搜索】暴力专项训练","date":"2020-10-10T08:22:11.000Z","date_formatted":{"ll":"Oct 10, 2020","L":"10/10/2020","MM-DD":"10-10"},"link":"lvkhi9","comments":true,"tags":["搜索","算法"],"categories":["备战蓝桥杯","数据结构与算法"],"updated":"2021-02-03T04:20:59.549Z","content":"<p><a href=\"https://www.luogu.com.cn/training/2932#problems\" target=\"_blank\" rel=\"external nofollow noopener\">题集链接</a></p>\n<h1 id=\"p1331-海战\">P1331 海战<a title=\"#p1331-海战\" href=\"#p1331-海战\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/P1331\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/P1331</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn= <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> dx[<span class=\"number\">4</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;,dy[<span class=\"number\">4</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">char</span> maze[maxn][maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> R,C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    maze[x][y]=<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> nx=x+dx[i];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ny=y+dy[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nx&gt;=<span class=\"number\">0</span>&amp;&amp;nx&lt;R&amp;&amp;ny&gt;=<span class=\"number\">0</span>&amp;&amp;ny&lt;C&amp;&amp;maze[nx][ny]==<span class=\"string\">&#x27;#&#x27;</span>)&#123;</span><br><span class=\"line\">            dfs(nx,ny);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;R&gt;&gt;C;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;R;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;C;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;maze[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;R;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;C;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(maze[i][j]==<span class=\"string\">&#x27;#&#x27;</span>)&#123;</span><br><span class=\"line\">                res++;</span><br><span class=\"line\">                dfs(i,j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;There are %d ships.&quot;</span>,res);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1602318286871-c719ddda-d186-4ca8-84a1-2dd119f8a427.png#align=left&amp;display=inline&amp;height=325&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=650&amp;originWidth=999&amp;size=82483&amp;status=done&amp;style=none&amp;width=499.5\" alt=\"image.png\"><br>\n后优化</p>\n<h1 id=\"p1596-[usaco10oct]lake-counting-s\">P1596 [USACO10OCT]Lake Counting S<a title=\"#p1596-[usaco10oct]lake-counting-s\" href=\"#p1596-[usaco10oct]lake-counting-s\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/P1596\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/P1596</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"built_in\">pair</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; P; <span class=\"comment\">//x,y坐标</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">char</span> maze[maxn][maxn];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;P&gt; q;</span><br><span class=\"line\">    q.push(P(i,j));</span><br><span class=\"line\">    maze[i][j]=<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q.size())&#123;</span><br><span class=\"line\">        P p=q.front(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=p.first,y=p.second;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> dx=<span class=\"number\">-1</span>;dx&lt;=<span class=\"number\">1</span>;dx++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> dy=<span class=\"number\">-1</span>;dy&lt;=<span class=\"number\">1</span>;dy++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> nx=x+dx;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> ny=y+dy;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(maze[nx][ny]==<span class=\"string\">&#x27;W&#x27;</span>)&#123;</span><br><span class=\"line\">                    maze[nx][ny]=<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">                    q.push(P(nx,ny));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;maze[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(maze[i][j]==<span class=\"string\">&#x27;W&#x27;</span>)&#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">                bfs(i,j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1552854/1602318369392-9c0327a1-43d0-4492-9dff-a0a239678409.png#align=left&amp;display=inline&amp;height=316&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=632&amp;originWidth=1005&amp;size=72565&amp;status=done&amp;style=none&amp;width=502.5\" alt=\"image.png\" class=\"φcx\"></p>\n<h1 id=\"p1219-[usaco1.5]八皇后-checker-challenge\">P1219 [USACO1.5]八皇后 Checker Challenge<a title=\"#p1219-[usaco1.5]八皇后-checker-challenge\" href=\"#p1219-[usaco1.5]八皇后-checker-challenge\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/P1219\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/P1219</a></p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">15</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,res;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cols[maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> diag1[maxn*<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> diag2[maxn*<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> board[maxn][maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isOk</span><span class=\"params\">(<span class=\"keyword\">int</span> row_index,<span class=\"keyword\">int</span> col_index)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !cols[col_index]&amp;&amp;!diag1[col_index+row_index]&amp;&amp;!diag2[row_index-col_index+n];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> row_index,<span class=\"keyword\">int</span> col_index,<span class=\"keyword\">bool</span> to)</span></span>&#123;</span><br><span class=\"line\">    cols[col_index]=to;</span><br><span class=\"line\">    diag1[col_index+row_index]=to;</span><br><span class=\"line\">    diag2[row_index-col_index+n]=to;</span><br><span class=\"line\">    board[row_index][col_index]=to?<span class=\"string\">&#x27;Q&#x27;</span>:<span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_board</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;j&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> row_index)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(row_index==n+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        res++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(res&lt;=<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            print_board();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> col_index=<span class=\"number\">1</span>;col_index&lt;=n;col_index++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isOk(row_index,col_index))&#123;</span><br><span class=\"line\">            update(row_index,col_index,<span class=\"literal\">true</span>);</span><br><span class=\"line\">            solve(row_index+<span class=\"number\">1</span>);</span><br><span class=\"line\">            update(row_index,col_index,<span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(board,<span class=\"string\">&#x27;.&#x27;</span>,<span class=\"keyword\">sizeof</span>(board));</span><br><span class=\"line\">    solve(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;res&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"p1162-填涂颜色\">P1162 填涂颜色<a title=\"#p1162-填涂颜色\" href=\"#p1162-填涂颜色\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.luogu.com.cn/problem/P1162\" target=\"_blank\" rel=\"external nofollow noopener\">https://www.luogu.com.cn/problem/P1162</a></p>\n</blockquote>\n<p>使用 bfs, 要点: <strong>对于某个 0, 只要他不属于边界 0 的连通量内, 他就可以变成 2</strong><br>\n我的写法:<br>\n先 bfs 遍历边界 0, 使用标记数组标记连通分量内的 0.<br>\n在遍历非边界位置, 遇到 0, 判断他是否已经被标记数组标记, 没有的话开始从这儿搜索,<br>\n第二种思路和第一种思路类似: 将所有的 0 变成 2, 之后将边界的 2 变为 0, 之后我们可以额外在外面加一圈 2, 这样边界的 2 就会形成一个连通分量, 减少查询次数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"built_in\">pair</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; P;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn=<span class=\"number\">35</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> dx[<span class=\"number\">4</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,dy[<span class=\"number\">4</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> board[maxn][maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开始搜索的坐标  搜索的对象 变成什么</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j,<span class=\"keyword\">int</span> which, <span class=\"keyword\">int</span> to)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;P&gt; q;</span><br><span class=\"line\">    q.push(P(i,j));</span><br><span class=\"line\">    board[i][j]=to;<span class=\"comment\">/////</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q.size())&#123;</span><br><span class=\"line\">        P p=q.front(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=p.first,y=p.second;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nx=x+dx[i],ny=y+dy[i];</span><br><span class=\"line\">            <span class=\"comment\">// 注意这里要扩大搜索范围, 因为我们多围了圈</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nx&gt;=<span class=\"number\">0</span>&amp;&amp;ny&gt;=<span class=\"number\">0</span>&amp;&amp;nx&lt;=n+<span class=\"number\">1</span>&amp;&amp;ny&lt;=n+<span class=\"number\">1</span>&amp;&amp;board[nx][ny]==which)&#123;</span><br><span class=\"line\">                board[nx][ny]=to;</span><br><span class=\"line\">                q.push(P(nx,ny));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;board[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 把0全部变成2</span></span><br><span class=\"line\">                bfs(i,j,<span class=\"number\">0</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 把边界的2的连通分量全部变成0</span></span><br><span class=\"line\">    <span class=\"comment\">// 因为我们多围了一圈, 所以边界的2是属于一个连通分量, 只需要一次搜索</span></span><br><span class=\"line\">    bfs(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 打印输出</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;board[i][j]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写出上面这段代码, 再看看别人的, 我才知道自己有多蠢, 第一次搜索把 0 变成 2 简直是弱智操作, 直接在读入的时候把 0 变成 2 不就行了吗.</p>\n<div><h1 id=\"推荐文章\">推荐文章<a title=\"#推荐文章\" href=\"%e6%8e%a8%e8%8d%90%e6%96%87%e7%ab%a0\"></a></h1><ul><li><a href=\"https://mvbbb.github.io/ehshi7/\">八皇后问题</a></li><li><a href=\"https://mvbbb.github.io/nftmte/\">位运算</a></li><li><a href=\"https://mvbbb.github.io/wu5oin/\">kuangbin 题单</a></li><li><a href=\"https://mvbbb.github.io/wdmukq/\">挑战程序设计竞赛-习题</a></li><li><a href=\"https://lailin.xyz/post/defer.html\">Go数据结构与算法05-栈下: 深入理解 defer</a></li></ul></div>","prev":{"title":"经典进程同步问题","link":"ognzg7"},"next":{"title":"八皇后问题","link":"ehshi7"},"plink":"https://mvbbb.github.io/lvkhi9/","toc":[{"id":"p1331-海战","title":"P1331 海战","index":"1"},{"id":"p1596-[usaco10oct]lake-counting-s","title":"P1596 [USACO10OCT]Lake Counting S","index":"2"},{"id":"p1219-[usaco1.5]八皇后-checker-challenge","title":"P1219 [USACO1.5]八皇后 Checker Challenge","index":"3"},{"id":"p1162-填涂颜色","title":"P1162 填涂颜色","index":"4"},{"id":"推荐文章","title":"推荐文章","index":"5"}],"copyright":{"author":"Mvbbb","link":"<a href=\"https://mvbbb.github.io/lvkhi9/\" title=\"洛谷【搜索】暴力专项训练\">https://mvbbb.github.io/lvkhi9/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}